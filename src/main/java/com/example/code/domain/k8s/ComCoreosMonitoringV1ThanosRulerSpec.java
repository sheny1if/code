/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecAffinity;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecAlertRelabelConfigs;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecAlertmanagersConfig;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecContainers;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecGrpcServerTlsConfig;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecObjectStorageConfig;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecPodMetadata;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecQueryConfig;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecResources1;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecRuleSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorage;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTolerations;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTracingConfig;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecVolumes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
 */
@ApiModel(description = "Specification of the desired behavior of the ThanosRuler cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1ThanosRulerSpec {
  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity;

  public static final String SERIALIZED_NAME_ALERT_DROP_LABELS = "alertDropLabels";
  @SerializedName(SERIALIZED_NAME_ALERT_DROP_LABELS)
  private List<String> alertDropLabels = null;

  public static final String SERIALIZED_NAME_ALERT_QUERY_URL = "alertQueryUrl";
  @SerializedName(SERIALIZED_NAME_ALERT_QUERY_URL)
  private String alertQueryUrl;

  public static final String SERIALIZED_NAME_ALERT_RELABEL_CONFIG_FILE = "alertRelabelConfigFile";
  @SerializedName(SERIALIZED_NAME_ALERT_RELABEL_CONFIG_FILE)
  private String alertRelabelConfigFile;

  public static final String SERIALIZED_NAME_ALERT_RELABEL_CONFIGS = "alertRelabelConfigs";
  @SerializedName(SERIALIZED_NAME_ALERT_RELABEL_CONFIGS)
  private ComCoreosMonitoringV1ThanosRulerSpecAlertRelabelConfigs alertRelabelConfigs;

  public static final String SERIALIZED_NAME_ALERTMANAGERS_CONFIG = "alertmanagersConfig";
  @SerializedName(SERIALIZED_NAME_ALERTMANAGERS_CONFIG)
  private ComCoreosMonitoringV1ThanosRulerSpecAlertmanagersConfig alertmanagersConfig;

  public static final String SERIALIZED_NAME_ALERTMANAGERS_URL = "alertmanagersUrl";
  @SerializedName(SERIALIZED_NAME_ALERTMANAGERS_URL)
  private List<String> alertmanagersUrl = null;

  public static final String SERIALIZED_NAME_CONTAINERS = "containers";
  @SerializedName(SERIALIZED_NAME_CONTAINERS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers = null;

  public static final String SERIALIZED_NAME_ENFORCED_NAMESPACE_LABEL = "enforcedNamespaceLabel";
  @SerializedName(SERIALIZED_NAME_ENFORCED_NAMESPACE_LABEL)
  private String enforcedNamespaceLabel;

  public static final String SERIALIZED_NAME_EVALUATION_INTERVAL = "evaluationInterval";
  @SerializedName(SERIALIZED_NAME_EVALUATION_INTERVAL)
  private String evaluationInterval;

  public static final String SERIALIZED_NAME_EXCLUDED_FROM_ENFORCEMENT = "excludedFromEnforcement";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_FROM_ENFORCEMENT)
  private List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> excludedFromEnforcement = null;

  public static final String SERIALIZED_NAME_EXTERNAL_PREFIX = "externalPrefix";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PREFIX)
  private String externalPrefix;

  public static final String SERIALIZED_NAME_GRPC_SERVER_TLS_CONFIG = "grpcServerTlsConfig";
  @SerializedName(SERIALIZED_NAME_GRPC_SERVER_TLS_CONFIG)
  private ComCoreosMonitoringV1ThanosRulerSpecGrpcServerTlsConfig grpcServerTlsConfig;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets = null;

  public static final String SERIALIZED_NAME_INIT_CONTAINERS = "initContainers";
  @SerializedName(SERIALIZED_NAME_INIT_CONTAINERS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers = null;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = null;

  public static final String SERIALIZED_NAME_LISTEN_LOCAL = "listenLocal";
  @SerializedName(SERIALIZED_NAME_LISTEN_LOCAL)
  private Boolean listenLocal;

  /**
   * Log format for ThanosRuler to be configured with.
   */
  @JsonAdapter(LogFormatEnum.Adapter.class)
  public enum LogFormatEnum {
    EMPTY(""),
    
    LOGFMT("logfmt"),
    
    JSON("json");

    private String value;

    LogFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogFormatEnum fromValue(String value) {
      for (LogFormatEnum b : LogFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOG_FORMAT = "logFormat";
  @SerializedName(SERIALIZED_NAME_LOG_FORMAT)
  private LogFormatEnum logFormat;

  /**
   * Log level for ThanosRuler to be configured with.
   */
  @JsonAdapter(LogLevelEnum.Adapter.class)
  public enum LogLevelEnum {
    EMPTY(""),
    
    DEBUG("debug"),
    
    INFO("info"),
    
    WARN("warn"),
    
    ERROR("error");

    private String value;

    LogLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogLevelEnum fromValue(String value) {
      for (LogLevelEnum b : LogLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogLevelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOG_LEVEL = "logLevel";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private LogLevelEnum logLevel;

  public static final String SERIALIZED_NAME_MIN_READY_SECONDS = "minReadySeconds";
  @SerializedName(SERIALIZED_NAME_MIN_READY_SECONDS)
  private Integer minReadySeconds;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_OBJECT_STORAGE_CONFIG = "objectStorageConfig";
  @SerializedName(SERIALIZED_NAME_OBJECT_STORAGE_CONFIG)
  private ComCoreosMonitoringV1ThanosRulerSpecObjectStorageConfig objectStorageConfig;

  public static final String SERIALIZED_NAME_OBJECT_STORAGE_CONFIG_FILE = "objectStorageConfigFile";
  @SerializedName(SERIALIZED_NAME_OBJECT_STORAGE_CONFIG_FILE)
  private String objectStorageConfigFile;

  public static final String SERIALIZED_NAME_PAUSED = "paused";
  @SerializedName(SERIALIZED_NAME_PAUSED)
  private Boolean paused;

  public static final String SERIALIZED_NAME_POD_METADATA = "podMetadata";
  @SerializedName(SERIALIZED_NAME_POD_METADATA)
  private ComCoreosMonitoringV1ThanosRulerSpecPodMetadata podMetadata;

  public static final String SERIALIZED_NAME_PORT_NAME = "portName";
  @SerializedName(SERIALIZED_NAME_PORT_NAME)
  private String portName;

  public static final String SERIALIZED_NAME_PRIORITY_CLASS_NAME = "priorityClassName";
  @SerializedName(SERIALIZED_NAME_PRIORITY_CLASS_NAME)
  private String priorityClassName;

  public static final String SERIALIZED_NAME_PROMETHEUS_RULES_EXCLUDED_FROM_ENFORCE = "prometheusRulesExcludedFromEnforce";
  @SerializedName(SERIALIZED_NAME_PROMETHEUS_RULES_EXCLUDED_FROM_ENFORCE)
  private List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> prometheusRulesExcludedFromEnforce = null;

  public static final String SERIALIZED_NAME_QUERY_CONFIG = "queryConfig";
  @SerializedName(SERIALIZED_NAME_QUERY_CONFIG)
  private ComCoreosMonitoringV1ThanosRulerSpecQueryConfig queryConfig;

  public static final String SERIALIZED_NAME_QUERY_ENDPOINTS = "queryEndpoints";
  @SerializedName(SERIALIZED_NAME_QUERY_ENDPOINTS)
  private List<String> queryEndpoints = null;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private ComCoreosMonitoringV1ThanosRulerSpecResources1 resources;

  public static final String SERIALIZED_NAME_RETENTION = "retention";
  @SerializedName(SERIALIZED_NAME_RETENTION)
  private String retention;

  public static final String SERIALIZED_NAME_ROUTE_PREFIX = "routePrefix";
  @SerializedName(SERIALIZED_NAME_ROUTE_PREFIX)
  private String routePrefix;

  public static final String SERIALIZED_NAME_RULE_NAMESPACE_SELECTOR = "ruleNamespaceSelector";
  @SerializedName(SERIALIZED_NAME_RULE_NAMESPACE_SELECTOR)
  private ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector ruleNamespaceSelector;

  public static final String SERIALIZED_NAME_RULE_SELECTOR = "ruleSelector";
  @SerializedName(SERIALIZED_NAME_RULE_SELECTOR)
  private ComCoreosMonitoringV1ThanosRulerSpecRuleSelector ruleSelector;

  public static final String SERIALIZED_NAME_SECURITY_CONTEXT = "securityContext";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONTEXT)
  private ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_NAME = "serviceAccountName";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_NAME)
  private String serviceAccountName;

  public static final String SERIALIZED_NAME_STORAGE = "storage";
  @SerializedName(SERIALIZED_NAME_STORAGE)
  private ComCoreosMonitoringV1ThanosRulerSpecStorage storage;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations = null;

  public static final String SERIALIZED_NAME_TOPOLOGY_SPREAD_CONSTRAINTS = "topologySpreadConstraints";
  @SerializedName(SERIALIZED_NAME_TOPOLOGY_SPREAD_CONSTRAINTS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints = null;

  public static final String SERIALIZED_NAME_TRACING_CONFIG = "tracingConfig";
  @SerializedName(SERIALIZED_NAME_TRACING_CONFIG)
  private ComCoreosMonitoringV1ThanosRulerSpecTracingConfig tracingConfig;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes = null;


  public ComCoreosMonitoringV1ThanosRulerSpec affinity(ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecAffinity getAffinity() {
    return affinity;
  }


  public void setAffinity(ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity) {
    this.affinity = affinity;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec alertDropLabels(List<String> alertDropLabels) {
    
    this.alertDropLabels = alertDropLabels;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addAlertDropLabelsItem(String alertDropLabelsItem) {
    if (this.alertDropLabels == null) {
      this.alertDropLabels = new ArrayList<String>();
    }
    this.alertDropLabels.add(alertDropLabelsItem);
    return this;
  }

   /**
   * AlertDropLabels configure the label names which should be dropped in ThanosRuler alerts. The replica label &#x60;thanos_ruler_replica&#x60; will always be dropped in alerts.
   * @return alertDropLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AlertDropLabels configure the label names which should be dropped in ThanosRuler alerts. The replica label `thanos_ruler_replica` will always be dropped in alerts.")

  public List<String> getAlertDropLabels() {
    return alertDropLabels;
  }


  public void setAlertDropLabels(List<String> alertDropLabels) {
    this.alertDropLabels = alertDropLabels;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec alertQueryUrl(String alertQueryUrl) {
    
    this.alertQueryUrl = alertQueryUrl;
    return this;
  }

   /**
   * The external Query URL the Thanos Ruler will set in the &#39;Source&#39; field of all alerts. Maps to the &#39;--alert.query-url&#39; CLI arg.
   * @return alertQueryUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external Query URL the Thanos Ruler will set in the 'Source' field of all alerts. Maps to the '--alert.query-url' CLI arg.")

  public String getAlertQueryUrl() {
    return alertQueryUrl;
  }


  public void setAlertQueryUrl(String alertQueryUrl) {
    this.alertQueryUrl = alertQueryUrl;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec alertRelabelConfigFile(String alertRelabelConfigFile) {
    
    this.alertRelabelConfigFile = alertRelabelConfigFile;
    return this;
  }

   /**
   * AlertRelabelConfigFile specifies the path of the alert relabeling configuration file. When used alongside with AlertRelabelConfigs, alertRelabelConfigFile takes precedence.
   * @return alertRelabelConfigFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AlertRelabelConfigFile specifies the path of the alert relabeling configuration file. When used alongside with AlertRelabelConfigs, alertRelabelConfigFile takes precedence.")

  public String getAlertRelabelConfigFile() {
    return alertRelabelConfigFile;
  }


  public void setAlertRelabelConfigFile(String alertRelabelConfigFile) {
    this.alertRelabelConfigFile = alertRelabelConfigFile;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec alertRelabelConfigs(ComCoreosMonitoringV1ThanosRulerSpecAlertRelabelConfigs alertRelabelConfigs) {
    
    this.alertRelabelConfigs = alertRelabelConfigs;
    return this;
  }

   /**
   * Get alertRelabelConfigs
   * @return alertRelabelConfigs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecAlertRelabelConfigs getAlertRelabelConfigs() {
    return alertRelabelConfigs;
  }


  public void setAlertRelabelConfigs(ComCoreosMonitoringV1ThanosRulerSpecAlertRelabelConfigs alertRelabelConfigs) {
    this.alertRelabelConfigs = alertRelabelConfigs;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec alertmanagersConfig(ComCoreosMonitoringV1ThanosRulerSpecAlertmanagersConfig alertmanagersConfig) {
    
    this.alertmanagersConfig = alertmanagersConfig;
    return this;
  }

   /**
   * Get alertmanagersConfig
   * @return alertmanagersConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecAlertmanagersConfig getAlertmanagersConfig() {
    return alertmanagersConfig;
  }


  public void setAlertmanagersConfig(ComCoreosMonitoringV1ThanosRulerSpecAlertmanagersConfig alertmanagersConfig) {
    this.alertmanagersConfig = alertmanagersConfig;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec alertmanagersUrl(List<String> alertmanagersUrl) {
    
    this.alertmanagersUrl = alertmanagersUrl;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addAlertmanagersUrlItem(String alertmanagersUrlItem) {
    if (this.alertmanagersUrl == null) {
      this.alertmanagersUrl = new ArrayList<String>();
    }
    this.alertmanagersUrl.add(alertmanagersUrlItem);
    return this;
  }

   /**
   * Define URLs to send alerts to Alertmanager.  For Thanos v0.10.0 and higher, AlertManagersConfig should be used instead.  Note: this field will be ignored if AlertManagersConfig is specified. Maps to the &#x60;alertmanagers.url&#x60; arg.
   * @return alertmanagersUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define URLs to send alerts to Alertmanager.  For Thanos v0.10.0 and higher, AlertManagersConfig should be used instead.  Note: this field will be ignored if AlertManagersConfig is specified. Maps to the `alertmanagers.url` arg.")

  public List<String> getAlertmanagersUrl() {
    return alertmanagersUrl;
  }


  public void setAlertmanagersUrl(List<String> alertmanagersUrl) {
    this.alertmanagersUrl = alertmanagersUrl;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec containers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers) {
    
    this.containers = containers;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addContainersItem(ComCoreosMonitoringV1ThanosRulerSpecContainers containersItem) {
    if (this.containers == null) {
      this.containers = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecContainers>();
    }
    this.containers.add(containersItem);
    return this;
  }

   /**
   * Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a ThanosRuler pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: &#x60;thanos-ruler&#x60; and &#x60;config-reloader&#x60;. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
   * @return containers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a ThanosRuler pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `thanos-ruler` and `config-reloader`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecContainers> getContainers() {
    return containers;
  }


  public void setContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers) {
    this.containers = containers;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec enforcedNamespaceLabel(String enforcedNamespaceLabel) {
    
    this.enforcedNamespaceLabel = enforcedNamespaceLabel;
    return this;
  }

   /**
   * EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.
   * @return enforcedNamespaceLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.")

  public String getEnforcedNamespaceLabel() {
    return enforcedNamespaceLabel;
  }


  public void setEnforcedNamespaceLabel(String enforcedNamespaceLabel) {
    this.enforcedNamespaceLabel = enforcedNamespaceLabel;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec evaluationInterval(String evaluationInterval) {
    
    this.evaluationInterval = evaluationInterval;
    return this;
  }

   /**
   * Interval between consecutive evaluations.
   * @return evaluationInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interval between consecutive evaluations.")

  public String getEvaluationInterval() {
    return evaluationInterval;
  }


  public void setEvaluationInterval(String evaluationInterval) {
    this.evaluationInterval = evaluationInterval;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec excludedFromEnforcement(List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> excludedFromEnforcement) {
    
    this.excludedFromEnforcement = excludedFromEnforcement;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addExcludedFromEnforcementItem(ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement excludedFromEnforcementItem) {
    if (this.excludedFromEnforcement == null) {
      this.excludedFromEnforcement = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement>();
    }
    this.excludedFromEnforcement.add(excludedFromEnforcementItem);
    return this;
  }

   /**
   * List of references to PrometheusRule objects to be excluded from enforcing a namespace label of origin. Applies only if enforcedNamespaceLabel set to true.
   * @return excludedFromEnforcement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of references to PrometheusRule objects to be excluded from enforcing a namespace label of origin. Applies only if enforcedNamespaceLabel set to true.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> getExcludedFromEnforcement() {
    return excludedFromEnforcement;
  }


  public void setExcludedFromEnforcement(List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> excludedFromEnforcement) {
    this.excludedFromEnforcement = excludedFromEnforcement;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec externalPrefix(String externalPrefix) {
    
    this.externalPrefix = externalPrefix;
    return this;
  }

   /**
   * The external URL the Thanos Ruler instances will be available under. This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name.
   * @return externalPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external URL the Thanos Ruler instances will be available under. This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name.")

  public String getExternalPrefix() {
    return externalPrefix;
  }


  public void setExternalPrefix(String externalPrefix) {
    this.externalPrefix = externalPrefix;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec grpcServerTlsConfig(ComCoreosMonitoringV1ThanosRulerSpecGrpcServerTlsConfig grpcServerTlsConfig) {
    
    this.grpcServerTlsConfig = grpcServerTlsConfig;
    return this;
  }

   /**
   * Get grpcServerTlsConfig
   * @return grpcServerTlsConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecGrpcServerTlsConfig getGrpcServerTlsConfig() {
    return grpcServerTlsConfig;
  }


  public void setGrpcServerTlsConfig(ComCoreosMonitoringV1ThanosRulerSpecGrpcServerTlsConfig grpcServerTlsConfig) {
    this.grpcServerTlsConfig = grpcServerTlsConfig;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Thanos container image URL.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Thanos container image URL.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec imagePullSecrets(List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets) {
    
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addImagePullSecretsItem(ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * An optional list of references to secrets in the same namespace to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
   * @return imagePullSecrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional list of references to secrets in the same namespace to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod")

  public List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> getImagePullSecrets() {
    return imagePullSecrets;
  }


  public void setImagePullSecrets(List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec initContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers) {
    
    this.initContainers = initContainers;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addInitContainersItem(ComCoreosMonitoringV1ThanosRulerSpecContainers initContainersItem) {
    if (this.initContainers == null) {
      this.initContainers = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecContainers>();
    }
    this.initContainers.add(initContainersItem);
    return this;
  }

   /**
   * InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the ThanosRuler configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
   * @return initContainers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the ThanosRuler configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecContainers> getInitContainers() {
    return initContainers;
  }


  public void setInitContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers) {
    this.initContainers = initContainers;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec labels(Map<String, String> labels) {
    
    this.labels = labels;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<String, String>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Labels configure the external label pairs to ThanosRuler. A default replica label &#x60;thanos_ruler_replica&#x60; will be always added  as a label with the value of the pod&#39;s name and it will be dropped in the alerts.
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Labels configure the external label pairs to ThanosRuler. A default replica label `thanos_ruler_replica` will be always added  as a label with the value of the pod's name and it will be dropped in the alerts.")

  public Map<String, String> getLabels() {
    return labels;
  }


  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec listenLocal(Boolean listenLocal) {
    
    this.listenLocal = listenLocal;
    return this;
  }

   /**
   * ListenLocal makes the Thanos ruler listen on loopback, so that it does not bind against the Pod IP.
   * @return listenLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ListenLocal makes the Thanos ruler listen on loopback, so that it does not bind against the Pod IP.")

  public Boolean getListenLocal() {
    return listenLocal;
  }


  public void setListenLocal(Boolean listenLocal) {
    this.listenLocal = listenLocal;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec logFormat(LogFormatEnum logFormat) {
    
    this.logFormat = logFormat;
    return this;
  }

   /**
   * Log format for ThanosRuler to be configured with.
   * @return logFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log format for ThanosRuler to be configured with.")

  public LogFormatEnum getLogFormat() {
    return logFormat;
  }


  public void setLogFormat(LogFormatEnum logFormat) {
    this.logFormat = logFormat;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec logLevel(LogLevelEnum logLevel) {
    
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Log level for ThanosRuler to be configured with.
   * @return logLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log level for ThanosRuler to be configured with.")

  public LogLevelEnum getLogLevel() {
    return logLevel;
  }


  public void setLogLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec minReadySeconds(Integer minReadySeconds) {
    
    this.minReadySeconds = minReadySeconds;
    return this;
  }

   /**
   * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.
   * @return minReadySeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.")

  public Integer getMinReadySeconds() {
    return minReadySeconds;
  }


  public void setMinReadySeconds(Integer minReadySeconds) {
    this.minReadySeconds = minReadySeconds;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * Define which Nodes the Pods are scheduled on.
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define which Nodes the Pods are scheduled on.")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec objectStorageConfig(ComCoreosMonitoringV1ThanosRulerSpecObjectStorageConfig objectStorageConfig) {
    
    this.objectStorageConfig = objectStorageConfig;
    return this;
  }

   /**
   * Get objectStorageConfig
   * @return objectStorageConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecObjectStorageConfig getObjectStorageConfig() {
    return objectStorageConfig;
  }


  public void setObjectStorageConfig(ComCoreosMonitoringV1ThanosRulerSpecObjectStorageConfig objectStorageConfig) {
    this.objectStorageConfig = objectStorageConfig;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec objectStorageConfigFile(String objectStorageConfigFile) {
    
    this.objectStorageConfigFile = objectStorageConfigFile;
    return this;
  }

   /**
   * ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.
   * @return objectStorageConfigFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.")

  public String getObjectStorageConfigFile() {
    return objectStorageConfigFile;
  }


  public void setObjectStorageConfigFile(String objectStorageConfigFile) {
    this.objectStorageConfigFile = objectStorageConfigFile;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec paused(Boolean paused) {
    
    this.paused = paused;
    return this;
  }

   /**
   * When a ThanosRuler deployment is paused, no actions except for deletion will be performed on the underlying objects.
   * @return paused
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When a ThanosRuler deployment is paused, no actions except for deletion will be performed on the underlying objects.")

  public Boolean getPaused() {
    return paused;
  }


  public void setPaused(Boolean paused) {
    this.paused = paused;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec podMetadata(ComCoreosMonitoringV1ThanosRulerSpecPodMetadata podMetadata) {
    
    this.podMetadata = podMetadata;
    return this;
  }

   /**
   * Get podMetadata
   * @return podMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecPodMetadata getPodMetadata() {
    return podMetadata;
  }


  public void setPodMetadata(ComCoreosMonitoringV1ThanosRulerSpecPodMetadata podMetadata) {
    this.podMetadata = podMetadata;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec portName(String portName) {
    
    this.portName = portName;
    return this;
  }

   /**
   * Port name used for the pods and governing service. This defaults to web
   * @return portName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Port name used for the pods and governing service. This defaults to web")

  public String getPortName() {
    return portName;
  }


  public void setPortName(String portName) {
    this.portName = portName;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec priorityClassName(String priorityClassName) {
    
    this.priorityClassName = priorityClassName;
    return this;
  }

   /**
   * Priority class assigned to the Pods
   * @return priorityClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Priority class assigned to the Pods")

  public String getPriorityClassName() {
    return priorityClassName;
  }


  public void setPriorityClassName(String priorityClassName) {
    this.priorityClassName = priorityClassName;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec prometheusRulesExcludedFromEnforce(List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> prometheusRulesExcludedFromEnforce) {
    
    this.prometheusRulesExcludedFromEnforce = prometheusRulesExcludedFromEnforce;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addPrometheusRulesExcludedFromEnforceItem(ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce prometheusRulesExcludedFromEnforceItem) {
    if (this.prometheusRulesExcludedFromEnforce == null) {
      this.prometheusRulesExcludedFromEnforce = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce>();
    }
    this.prometheusRulesExcludedFromEnforce.add(prometheusRulesExcludedFromEnforceItem);
    return this;
  }

   /**
   * PrometheusRulesExcludedFromEnforce - list of Prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair Deprecated: use excludedFromEnforcement instead.
   * @return prometheusRulesExcludedFromEnforce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PrometheusRulesExcludedFromEnforce - list of Prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair Deprecated: use excludedFromEnforcement instead.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> getPrometheusRulesExcludedFromEnforce() {
    return prometheusRulesExcludedFromEnforce;
  }


  public void setPrometheusRulesExcludedFromEnforce(List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> prometheusRulesExcludedFromEnforce) {
    this.prometheusRulesExcludedFromEnforce = prometheusRulesExcludedFromEnforce;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec queryConfig(ComCoreosMonitoringV1ThanosRulerSpecQueryConfig queryConfig) {
    
    this.queryConfig = queryConfig;
    return this;
  }

   /**
   * Get queryConfig
   * @return queryConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecQueryConfig getQueryConfig() {
    return queryConfig;
  }


  public void setQueryConfig(ComCoreosMonitoringV1ThanosRulerSpecQueryConfig queryConfig) {
    this.queryConfig = queryConfig;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec queryEndpoints(List<String> queryEndpoints) {
    
    this.queryEndpoints = queryEndpoints;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addQueryEndpointsItem(String queryEndpointsItem) {
    if (this.queryEndpoints == null) {
      this.queryEndpoints = new ArrayList<String>();
    }
    this.queryEndpoints.add(queryEndpointsItem);
    return this;
  }

   /**
   * QueryEndpoints defines Thanos querier endpoints from which to query metrics. Maps to the --query flag of thanos ruler.
   * @return queryEndpoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QueryEndpoints defines Thanos querier endpoints from which to query metrics. Maps to the --query flag of thanos ruler.")

  public List<String> getQueryEndpoints() {
    return queryEndpoints;
  }


  public void setQueryEndpoints(List<String> queryEndpoints) {
    this.queryEndpoints = queryEndpoints;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Number of thanos ruler instances to deploy.
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of thanos ruler instances to deploy.")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec resources(ComCoreosMonitoringV1ThanosRulerSpecResources1 resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecResources1 getResources() {
    return resources;
  }


  public void setResources(ComCoreosMonitoringV1ThanosRulerSpecResources1 resources) {
    this.resources = resources;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec retention(String retention) {
    
    this.retention = retention;
    return this;
  }

   /**
   * Time duration ThanosRuler shall retain data for. Default is &#39;24h&#39;, and must match the regular expression &#x60;[0-9]+(ms|s|m|h|d|w|y)&#x60; (milliseconds seconds minutes hours days weeks years).
   * @return retention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).")

  public String getRetention() {
    return retention;
  }


  public void setRetention(String retention) {
    this.retention = retention;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec routePrefix(String routePrefix) {
    
    this.routePrefix = routePrefix;
    return this;
  }

   /**
   * The route prefix ThanosRuler registers HTTP handlers for. This allows thanos UI to be served on a sub-path.
   * @return routePrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The route prefix ThanosRuler registers HTTP handlers for. This allows thanos UI to be served on a sub-path.")

  public String getRoutePrefix() {
    return routePrefix;
  }


  public void setRoutePrefix(String routePrefix) {
    this.routePrefix = routePrefix;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec ruleNamespaceSelector(ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector ruleNamespaceSelector) {
    
    this.ruleNamespaceSelector = ruleNamespaceSelector;
    return this;
  }

   /**
   * Get ruleNamespaceSelector
   * @return ruleNamespaceSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector getRuleNamespaceSelector() {
    return ruleNamespaceSelector;
  }


  public void setRuleNamespaceSelector(ComCoreosMonitoringV1ThanosRulerSpecRuleNamespaceSelector ruleNamespaceSelector) {
    this.ruleNamespaceSelector = ruleNamespaceSelector;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec ruleSelector(ComCoreosMonitoringV1ThanosRulerSpecRuleSelector ruleSelector) {
    
    this.ruleSelector = ruleSelector;
    return this;
  }

   /**
   * Get ruleSelector
   * @return ruleSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecRuleSelector getRuleSelector() {
    return ruleSelector;
  }


  public void setRuleSelector(ComCoreosMonitoringV1ThanosRulerSpecRuleSelector ruleSelector) {
    this.ruleSelector = ruleSelector;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec securityContext(ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext) {
    
    this.securityContext = securityContext;
    return this;
  }

   /**
   * Get securityContext
   * @return securityContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 getSecurityContext() {
    return securityContext;
  }


  public void setSecurityContext(ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext) {
    this.securityContext = securityContext;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec serviceAccountName(String serviceAccountName) {
    
    this.serviceAccountName = serviceAccountName;
    return this;
  }

   /**
   * ServiceAccountName is the name of the ServiceAccount to use to run the Thanos Ruler Pods.
   * @return serviceAccountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ServiceAccountName is the name of the ServiceAccount to use to run the Thanos Ruler Pods.")

  public String getServiceAccountName() {
    return serviceAccountName;
  }


  public void setServiceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec storage(ComCoreosMonitoringV1ThanosRulerSpecStorage storage) {
    
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecStorage getStorage() {
    return storage;
  }


  public void setStorage(ComCoreosMonitoringV1ThanosRulerSpecStorage storage) {
    this.storage = storage;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec tolerations(List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addTolerationsItem(ComCoreosMonitoringV1ThanosRulerSpecTolerations tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecTolerations>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * If specified, the pod&#39;s tolerations.
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the pod's tolerations.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations) {
    this.tolerations = tolerations;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec topologySpreadConstraints(List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints) {
    
    this.topologySpreadConstraints = topologySpreadConstraints;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addTopologySpreadConstraintsItem(ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints topologySpreadConstraintsItem) {
    if (this.topologySpreadConstraints == null) {
      this.topologySpreadConstraints = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints>();
    }
    this.topologySpreadConstraints.add(topologySpreadConstraintsItem);
    return this;
  }

   /**
   * If specified, the pod&#39;s topology spread constraints.
   * @return topologySpreadConstraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the pod's topology spread constraints.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> getTopologySpreadConstraints() {
    return topologySpreadConstraints;
  }


  public void setTopologySpreadConstraints(List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints) {
    this.topologySpreadConstraints = topologySpreadConstraints;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec tracingConfig(ComCoreosMonitoringV1ThanosRulerSpecTracingConfig tracingConfig) {
    
    this.tracingConfig = tracingConfig;
    return this;
  }

   /**
   * Get tracingConfig
   * @return tracingConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecTracingConfig getTracingConfig() {
    return tracingConfig;
  }


  public void setTracingConfig(ComCoreosMonitoringV1ThanosRulerSpecTracingConfig tracingConfig) {
    this.tracingConfig = tracingConfig;
  }


  public ComCoreosMonitoringV1ThanosRulerSpec volumes(List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpec addVolumesItem(ComCoreosMonitoringV1ThanosRulerSpecVolumes volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecVolumes>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1ThanosRulerSpec {\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    alertDropLabels: ").append(toIndentedString(alertDropLabels)).append("\n");
    sb.append("    alertQueryUrl: ").append(toIndentedString(alertQueryUrl)).append("\n");
    sb.append("    alertRelabelConfigFile: ").append(toIndentedString(alertRelabelConfigFile)).append("\n");
    sb.append("    alertRelabelConfigs: ").append(toIndentedString(alertRelabelConfigs)).append("\n");
    sb.append("    alertmanagersConfig: ").append(toIndentedString(alertmanagersConfig)).append("\n");
    sb.append("    alertmanagersUrl: ").append(toIndentedString(alertmanagersUrl)).append("\n");
    sb.append("    containers: ").append(toIndentedString(containers)).append("\n");
    sb.append("    enforcedNamespaceLabel: ").append(toIndentedString(enforcedNamespaceLabel)).append("\n");
    sb.append("    evaluationInterval: ").append(toIndentedString(evaluationInterval)).append("\n");
    sb.append("    excludedFromEnforcement: ").append(toIndentedString(excludedFromEnforcement)).append("\n");
    sb.append("    externalPrefix: ").append(toIndentedString(externalPrefix)).append("\n");
    sb.append("    grpcServerTlsConfig: ").append(toIndentedString(grpcServerTlsConfig)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    initContainers: ").append(toIndentedString(initContainers)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    listenLocal: ").append(toIndentedString(listenLocal)).append("\n");
    sb.append("    logFormat: ").append(toIndentedString(logFormat)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    minReadySeconds: ").append(toIndentedString(minReadySeconds)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    objectStorageConfig: ").append(toIndentedString(objectStorageConfig)).append("\n");
    sb.append("    objectStorageConfigFile: ").append(toIndentedString(objectStorageConfigFile)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    podMetadata: ").append(toIndentedString(podMetadata)).append("\n");
    sb.append("    portName: ").append(toIndentedString(portName)).append("\n");
    sb.append("    priorityClassName: ").append(toIndentedString(priorityClassName)).append("\n");
    sb.append("    prometheusRulesExcludedFromEnforce: ").append(toIndentedString(prometheusRulesExcludedFromEnforce)).append("\n");
    sb.append("    queryConfig: ").append(toIndentedString(queryConfig)).append("\n");
    sb.append("    queryEndpoints: ").append(toIndentedString(queryEndpoints)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    routePrefix: ").append(toIndentedString(routePrefix)).append("\n");
    sb.append("    ruleNamespaceSelector: ").append(toIndentedString(ruleNamespaceSelector)).append("\n");
    sb.append("    ruleSelector: ").append(toIndentedString(ruleSelector)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    topologySpreadConstraints: ").append(toIndentedString(topologySpreadConstraints)).append("\n");
    sb.append("    tracingConfig: ").append(toIndentedString(tracingConfig)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

