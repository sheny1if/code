/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InhibitRule defines an inhibition rule that allows to mute alerts when other alerts are already firing. See https://prometheus.io/docs/alerting/latest/configuration/#inhibit_rule
 */
@ApiModel(description = "InhibitRule defines an inhibition rule that allows to mute alerts when other alerts are already firing. See https://prometheus.io/docs/alerting/latest/configuration/#inhibit_rule")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules {
  public static final String SERIALIZED_NAME_EQUAL = "equal";
  @SerializedName(SERIALIZED_NAME_EQUAL)
  private List<String> equal = null;

  public static final String SERIALIZED_NAME_SOURCE_MATCH = "sourceMatch";
  @SerializedName(SERIALIZED_NAME_SOURCE_MATCH)
  private List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> sourceMatch = null;

  public static final String SERIALIZED_NAME_TARGET_MATCH = "targetMatch";
  @SerializedName(SERIALIZED_NAME_TARGET_MATCH)
  private List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> targetMatch = null;


  public ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules equal(List<String> equal) {
    
    this.equal = equal;
    return this;
  }

  public ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules addEqualItem(String equalItem) {
    if (this.equal == null) {
      this.equal = new ArrayList<String>();
    }
    this.equal.add(equalItem);
    return this;
  }

   /**
   * Labels that must have an equal value in the source and target alert for the inhibition to take effect.
   * @return equal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Labels that must have an equal value in the source and target alert for the inhibition to take effect.")

  public List<String> getEqual() {
    return equal;
  }


  public void setEqual(List<String> equal) {
    this.equal = equal;
  }


  public ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules sourceMatch(List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> sourceMatch) {
    
    this.sourceMatch = sourceMatch;
    return this;
  }

  public ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules addSourceMatchItem(ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch sourceMatchItem) {
    if (this.sourceMatch == null) {
      this.sourceMatch = new ArrayList<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch>();
    }
    this.sourceMatch.add(sourceMatchItem);
    return this;
  }

   /**
   * Matchers for which one or more alerts have to exist for the inhibition to take effect. The operator enforces that the alert matches the resource’s namespace.
   * @return sourceMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Matchers for which one or more alerts have to exist for the inhibition to take effect. The operator enforces that the alert matches the resource’s namespace.")

  public List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> getSourceMatch() {
    return sourceMatch;
  }


  public void setSourceMatch(List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> sourceMatch) {
    this.sourceMatch = sourceMatch;
  }


  public ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules targetMatch(List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> targetMatch) {
    
    this.targetMatch = targetMatch;
    return this;
  }

  public ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules addTargetMatchItem(ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch targetMatchItem) {
    if (this.targetMatch == null) {
      this.targetMatch = new ArrayList<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch>();
    }
    this.targetMatch.add(targetMatchItem);
    return this;
  }

   /**
   * Matchers that have to be fulfilled in the alerts to be muted. The operator enforces that the alert matches the resource’s namespace.
   * @return targetMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Matchers that have to be fulfilled in the alerts to be muted. The operator enforces that the alert matches the resource’s namespace.")

  public List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> getTargetMatch() {
    return targetMatch;
  }


  public void setTargetMatch(List<ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecSourceMatch> targetMatch) {
    this.targetMatch = targetMatch;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1alpha1AlertmanagerConfigSpecInhibitRules {\n");
    sb.append("    equal: ").append(toIndentedString(equal)).append("\n");
    sb.append("    sourceMatch: ").append(toIndentedString(sourceMatch)).append("\n");
    sb.append("    targetMatch: ").append(toIndentedString(targetMatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

