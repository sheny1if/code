/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ProbeSpecOauth2ClientId;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ProbeSpecOauth2ClientSecret;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.
 */
@ApiModel(description = "OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1ProbeSpecOauth2 {
  public static final String SERIALIZED_NAME_CLIENT_ID = "clientId";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private ComCoreosMonitoringV1ProbeSpecOauth2ClientId clientId;

  public static final String SERIALIZED_NAME_CLIENT_SECRET = "clientSecret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private ComCoreosMonitoringV1ProbeSpecOauth2ClientSecret clientSecret;

  public static final String SERIALIZED_NAME_ENDPOINT_PARAMS = "endpointParams";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_PARAMS)
  private Map<String, String> endpointParams = null;

  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  private List<String> scopes = null;

  public static final String SERIALIZED_NAME_TOKEN_URL = "tokenUrl";
  @SerializedName(SERIALIZED_NAME_TOKEN_URL)
  private String tokenUrl;


  public ComCoreosMonitoringV1ProbeSpecOauth2 clientId(ComCoreosMonitoringV1ProbeSpecOauth2ClientId clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(required = true, value = "")

  public ComCoreosMonitoringV1ProbeSpecOauth2ClientId getClientId() {
    return clientId;
  }


  public void setClientId(ComCoreosMonitoringV1ProbeSpecOauth2ClientId clientId) {
    this.clientId = clientId;
  }


  public ComCoreosMonitoringV1ProbeSpecOauth2 clientSecret(ComCoreosMonitoringV1ProbeSpecOauth2ClientSecret clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Get clientSecret
   * @return clientSecret
  **/
  @ApiModelProperty(required = true, value = "")

  public ComCoreosMonitoringV1ProbeSpecOauth2ClientSecret getClientSecret() {
    return clientSecret;
  }


  public void setClientSecret(ComCoreosMonitoringV1ProbeSpecOauth2ClientSecret clientSecret) {
    this.clientSecret = clientSecret;
  }


  public ComCoreosMonitoringV1ProbeSpecOauth2 endpointParams(Map<String, String> endpointParams) {
    
    this.endpointParams = endpointParams;
    return this;
  }

  public ComCoreosMonitoringV1ProbeSpecOauth2 putEndpointParamsItem(String key, String endpointParamsItem) {
    if (this.endpointParams == null) {
      this.endpointParams = new HashMap<String, String>();
    }
    this.endpointParams.put(key, endpointParamsItem);
    return this;
  }

   /**
   * Parameters to append to the token URL
   * @return endpointParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parameters to append to the token URL")

  public Map<String, String> getEndpointParams() {
    return endpointParams;
  }


  public void setEndpointParams(Map<String, String> endpointParams) {
    this.endpointParams = endpointParams;
  }


  public ComCoreosMonitoringV1ProbeSpecOauth2 scopes(List<String> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public ComCoreosMonitoringV1ProbeSpecOauth2 addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<String>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * OAuth2 scopes used for the token request
   * @return scopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "OAuth2 scopes used for the token request")

  public List<String> getScopes() {
    return scopes;
  }


  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }


  public ComCoreosMonitoringV1ProbeSpecOauth2 tokenUrl(String tokenUrl) {
    
    this.tokenUrl = tokenUrl;
    return this;
  }

   /**
   * The URL to fetch the token from
   * @return tokenUrl
  **/
  @ApiModelProperty(required = true, value = "The URL to fetch the token from")

  public String getTokenUrl() {
    return tokenUrl;
  }


  public void setTokenUrl(String tokenUrl) {
    this.tokenUrl = tokenUrl;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1ProbeSpecOauth2 {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    endpointParams: ").append(toIndentedString(endpointParams)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    tokenUrl: ").append(toIndentedString(tokenUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

