/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigNamespaceSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfiguration;
import com.example.code.domain.k8s.ComCoreosMonitoringV1AlertmanagerSpecPodMetadata;
import com.example.code.domain.k8s.ComCoreosMonitoringV1AlertmanagerSpecStorage;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecResources;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecAffinity;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecContainers;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTolerations;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecVolumes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Specification of the desired behavior of the Alertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
 */
@ApiModel(description = "Specification of the desired behavior of the Alertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1AlertmanagerSpec {
  public static final String SERIALIZED_NAME_ADDITIONAL_PEERS = "additionalPeers";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_PEERS)
  private List<String> additionalPeers = null;

  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity;

  public static final String SERIALIZED_NAME_ALERTMANAGER_CONFIG_NAMESPACE_SELECTOR = "alertmanagerConfigNamespaceSelector";
  @SerializedName(SERIALIZED_NAME_ALERTMANAGER_CONFIG_NAMESPACE_SELECTOR)
  private ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigNamespaceSelector alertmanagerConfigNamespaceSelector;

  public static final String SERIALIZED_NAME_ALERTMANAGER_CONFIG_SELECTOR = "alertmanagerConfigSelector";
  @SerializedName(SERIALIZED_NAME_ALERTMANAGER_CONFIG_SELECTOR)
  private ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigSelector alertmanagerConfigSelector;

  public static final String SERIALIZED_NAME_ALERTMANAGER_CONFIGURATION = "alertmanagerConfiguration";
  @SerializedName(SERIALIZED_NAME_ALERTMANAGER_CONFIGURATION)
  private ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfiguration alertmanagerConfiguration;

  public static final String SERIALIZED_NAME_BASE_IMAGE = "baseImage";
  @SerializedName(SERIALIZED_NAME_BASE_IMAGE)
  private String baseImage;

  public static final String SERIALIZED_NAME_CLUSTER_ADVERTISE_ADDRESS = "clusterAdvertiseAddress";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ADVERTISE_ADDRESS)
  private String clusterAdvertiseAddress;

  public static final String SERIALIZED_NAME_CLUSTER_GOSSIP_INTERVAL = "clusterGossipInterval";
  @SerializedName(SERIALIZED_NAME_CLUSTER_GOSSIP_INTERVAL)
  private String clusterGossipInterval;

  public static final String SERIALIZED_NAME_CLUSTER_PEER_TIMEOUT = "clusterPeerTimeout";
  @SerializedName(SERIALIZED_NAME_CLUSTER_PEER_TIMEOUT)
  private String clusterPeerTimeout;

  public static final String SERIALIZED_NAME_CLUSTER_PUSHPULL_INTERVAL = "clusterPushpullInterval";
  @SerializedName(SERIALIZED_NAME_CLUSTER_PUSHPULL_INTERVAL)
  private String clusterPushpullInterval;

  public static final String SERIALIZED_NAME_CONFIG_MAPS = "configMaps";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAPS)
  private List<String> configMaps = null;

  public static final String SERIALIZED_NAME_CONFIG_SECRET = "configSecret";
  @SerializedName(SERIALIZED_NAME_CONFIG_SECRET)
  private String configSecret;

  public static final String SERIALIZED_NAME_CONTAINERS = "containers";
  @SerializedName(SERIALIZED_NAME_CONTAINERS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers = null;

  public static final String SERIALIZED_NAME_EXTERNAL_URL = "externalUrl";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_URL)
  private String externalUrl;

  public static final String SERIALIZED_NAME_FORCE_ENABLE_CLUSTER_MODE = "forceEnableClusterMode";
  @SerializedName(SERIALIZED_NAME_FORCE_ENABLE_CLUSTER_MODE)
  private Boolean forceEnableClusterMode;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets = null;

  public static final String SERIALIZED_NAME_INIT_CONTAINERS = "initContainers";
  @SerializedName(SERIALIZED_NAME_INIT_CONTAINERS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers = null;

  public static final String SERIALIZED_NAME_LISTEN_LOCAL = "listenLocal";
  @SerializedName(SERIALIZED_NAME_LISTEN_LOCAL)
  private Boolean listenLocal;

  /**
   * Log format for Alertmanager to be configured with.
   */
  @JsonAdapter(LogFormatEnum.Adapter.class)
  public enum LogFormatEnum {
    EMPTY(""),
    
    LOGFMT("logfmt"),
    
    JSON("json");

    private String value;

    LogFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogFormatEnum fromValue(String value) {
      for (LogFormatEnum b : LogFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOG_FORMAT = "logFormat";
  @SerializedName(SERIALIZED_NAME_LOG_FORMAT)
  private LogFormatEnum logFormat;

  /**
   * Log level for Alertmanager to be configured with.
   */
  @JsonAdapter(LogLevelEnum.Adapter.class)
  public enum LogLevelEnum {
    EMPTY(""),
    
    DEBUG("debug"),
    
    INFO("info"),
    
    WARN("warn"),
    
    ERROR("error");

    private String value;

    LogLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogLevelEnum fromValue(String value) {
      for (LogLevelEnum b : LogLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogLevelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOG_LEVEL = "logLevel";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private LogLevelEnum logLevel;

  public static final String SERIALIZED_NAME_MIN_READY_SECONDS = "minReadySeconds";
  @SerializedName(SERIALIZED_NAME_MIN_READY_SECONDS)
  private Integer minReadySeconds;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_PAUSED = "paused";
  @SerializedName(SERIALIZED_NAME_PAUSED)
  private Boolean paused;

  public static final String SERIALIZED_NAME_POD_METADATA = "podMetadata";
  @SerializedName(SERIALIZED_NAME_POD_METADATA)
  private ComCoreosMonitoringV1AlertmanagerSpecPodMetadata podMetadata;

  public static final String SERIALIZED_NAME_PORT_NAME = "portName";
  @SerializedName(SERIALIZED_NAME_PORT_NAME)
  private String portName;

  public static final String SERIALIZED_NAME_PRIORITY_CLASS_NAME = "priorityClassName";
  @SerializedName(SERIALIZED_NAME_PRIORITY_CLASS_NAME)
  private String priorityClassName;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private ComCoreosMonitoringV1PrometheusSpecResources resources;

  public static final String SERIALIZED_NAME_RETENTION = "retention";
  @SerializedName(SERIALIZED_NAME_RETENTION)
  private String retention;

  public static final String SERIALIZED_NAME_ROUTE_PREFIX = "routePrefix";
  @SerializedName(SERIALIZED_NAME_ROUTE_PREFIX)
  private String routePrefix;

  public static final String SERIALIZED_NAME_SECRETS = "secrets";
  @SerializedName(SERIALIZED_NAME_SECRETS)
  private List<String> secrets = null;

  public static final String SERIALIZED_NAME_SECURITY_CONTEXT = "securityContext";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONTEXT)
  private ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_NAME = "serviceAccountName";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_NAME)
  private String serviceAccountName;

  public static final String SERIALIZED_NAME_SHA = "sha";
  @SerializedName(SERIALIZED_NAME_SHA)
  private String sha;

  public static final String SERIALIZED_NAME_STORAGE = "storage";
  @SerializedName(SERIALIZED_NAME_STORAGE)
  private ComCoreosMonitoringV1AlertmanagerSpecStorage storage;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations = null;

  public static final String SERIALIZED_NAME_TOPOLOGY_SPREAD_CONSTRAINTS = "topologySpreadConstraints";
  @SerializedName(SERIALIZED_NAME_TOPOLOGY_SPREAD_CONSTRAINTS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_VOLUME_MOUNTS = "volumeMounts";
  @SerializedName(SERIALIZED_NAME_VOLUME_MOUNTS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> volumeMounts = null;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes = null;


  public ComCoreosMonitoringV1AlertmanagerSpec additionalPeers(List<String> additionalPeers) {
    
    this.additionalPeers = additionalPeers;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addAdditionalPeersItem(String additionalPeersItem) {
    if (this.additionalPeers == null) {
      this.additionalPeers = new ArrayList<String>();
    }
    this.additionalPeers.add(additionalPeersItem);
    return this;
  }

   /**
   * AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.
   * @return additionalPeers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.")

  public List<String> getAdditionalPeers() {
    return additionalPeers;
  }


  public void setAdditionalPeers(List<String> additionalPeers) {
    this.additionalPeers = additionalPeers;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec affinity(ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecAffinity getAffinity() {
    return affinity;
  }


  public void setAffinity(ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity) {
    this.affinity = affinity;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec alertmanagerConfigNamespaceSelector(ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigNamespaceSelector alertmanagerConfigNamespaceSelector) {
    
    this.alertmanagerConfigNamespaceSelector = alertmanagerConfigNamespaceSelector;
    return this;
  }

   /**
   * Get alertmanagerConfigNamespaceSelector
   * @return alertmanagerConfigNamespaceSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigNamespaceSelector getAlertmanagerConfigNamespaceSelector() {
    return alertmanagerConfigNamespaceSelector;
  }


  public void setAlertmanagerConfigNamespaceSelector(ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigNamespaceSelector alertmanagerConfigNamespaceSelector) {
    this.alertmanagerConfigNamespaceSelector = alertmanagerConfigNamespaceSelector;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec alertmanagerConfigSelector(ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigSelector alertmanagerConfigSelector) {
    
    this.alertmanagerConfigSelector = alertmanagerConfigSelector;
    return this;
  }

   /**
   * Get alertmanagerConfigSelector
   * @return alertmanagerConfigSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigSelector getAlertmanagerConfigSelector() {
    return alertmanagerConfigSelector;
  }


  public void setAlertmanagerConfigSelector(ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfigSelector alertmanagerConfigSelector) {
    this.alertmanagerConfigSelector = alertmanagerConfigSelector;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec alertmanagerConfiguration(ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfiguration alertmanagerConfiguration) {
    
    this.alertmanagerConfiguration = alertmanagerConfiguration;
    return this;
  }

   /**
   * Get alertmanagerConfiguration
   * @return alertmanagerConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfiguration getAlertmanagerConfiguration() {
    return alertmanagerConfiguration;
  }


  public void setAlertmanagerConfiguration(ComCoreosMonitoringV1AlertmanagerSpecAlertmanagerConfiguration alertmanagerConfiguration) {
    this.alertmanagerConfiguration = alertmanagerConfiguration;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec baseImage(String baseImage) {
    
    this.baseImage = baseImage;
    return this;
  }

   /**
   * Base image that is used to deploy pods, without tag. Deprecated: use &#39;image&#39; instead
   * @return baseImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base image that is used to deploy pods, without tag. Deprecated: use 'image' instead")

  public String getBaseImage() {
    return baseImage;
  }


  public void setBaseImage(String baseImage) {
    this.baseImage = baseImage;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec clusterAdvertiseAddress(String clusterAdvertiseAddress) {
    
    this.clusterAdvertiseAddress = clusterAdvertiseAddress;
    return this;
  }

   /**
   * ClusterAdvertiseAddress is the explicit address to advertise in cluster. Needs to be provided for non RFC1918 [1] (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918
   * @return clusterAdvertiseAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ClusterAdvertiseAddress is the explicit address to advertise in cluster. Needs to be provided for non RFC1918 [1] (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918")

  public String getClusterAdvertiseAddress() {
    return clusterAdvertiseAddress;
  }


  public void setClusterAdvertiseAddress(String clusterAdvertiseAddress) {
    this.clusterAdvertiseAddress = clusterAdvertiseAddress;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec clusterGossipInterval(String clusterGossipInterval) {
    
    this.clusterGossipInterval = clusterGossipInterval;
    return this;
  }

   /**
   * Interval between gossip attempts.
   * @return clusterGossipInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interval between gossip attempts.")

  public String getClusterGossipInterval() {
    return clusterGossipInterval;
  }


  public void setClusterGossipInterval(String clusterGossipInterval) {
    this.clusterGossipInterval = clusterGossipInterval;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec clusterPeerTimeout(String clusterPeerTimeout) {
    
    this.clusterPeerTimeout = clusterPeerTimeout;
    return this;
  }

   /**
   * Timeout for cluster peering.
   * @return clusterPeerTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timeout for cluster peering.")

  public String getClusterPeerTimeout() {
    return clusterPeerTimeout;
  }


  public void setClusterPeerTimeout(String clusterPeerTimeout) {
    this.clusterPeerTimeout = clusterPeerTimeout;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec clusterPushpullInterval(String clusterPushpullInterval) {
    
    this.clusterPushpullInterval = clusterPushpullInterval;
    return this;
  }

   /**
   * Interval between pushpull attempts.
   * @return clusterPushpullInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interval between pushpull attempts.")

  public String getClusterPushpullInterval() {
    return clusterPushpullInterval;
  }


  public void setClusterPushpullInterval(String clusterPushpullInterval) {
    this.clusterPushpullInterval = clusterPushpullInterval;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec configMaps(List<String> configMaps) {
    
    this.configMaps = configMaps;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addConfigMapsItem(String configMapsItem) {
    if (this.configMaps == null) {
      this.configMaps = new ArrayList<String>();
    }
    this.configMaps.add(configMapsItem);
    return this;
  }

   /**
   * ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/&lt;configmap-name&gt;.
   * @return configMaps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ConfigMaps is a list of ConfigMaps in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.")

  public List<String> getConfigMaps() {
    return configMaps;
  }


  public void setConfigMaps(List<String> configMaps) {
    this.configMaps = configMaps;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec configSecret(String configSecret) {
    
    this.configSecret = configSecret;
    return this;
  }

   /**
   * ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains the configuration for this Alertmanager instance. If empty, it defaults to &#39;alertmanager-&lt;alertmanager-name&gt;&#39;.   The Alertmanager configuration should be available under the &#x60;alertmanager.yaml&#x60; key. Additional keys from the original secret are copied to the generated secret.   If either the secret or the &#x60;alertmanager.yaml&#x60; key is missing, the operator provisions an Alertmanager configuration with one empty receiver (effectively dropping alert notifications).
   * @return configSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ConfigSecret is the name of a Kubernetes Secret in the same namespace as the Alertmanager object, which contains the configuration for this Alertmanager instance. If empty, it defaults to 'alertmanager-<alertmanager-name>'.   The Alertmanager configuration should be available under the `alertmanager.yaml` key. Additional keys from the original secret are copied to the generated secret.   If either the secret or the `alertmanager.yaml` key is missing, the operator provisions an Alertmanager configuration with one empty receiver (effectively dropping alert notifications).")

  public String getConfigSecret() {
    return configSecret;
  }


  public void setConfigSecret(String configSecret) {
    this.configSecret = configSecret;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec containers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers) {
    
    this.containers = containers;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addContainersItem(ComCoreosMonitoringV1ThanosRulerSpecContainers containersItem) {
    if (this.containers == null) {
      this.containers = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecContainers>();
    }
    this.containers.add(containersItem);
    return this;
  }

   /**
   * Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: &#x60;alertmanager&#x60; and &#x60;config-reloader&#x60;. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
   * @return containers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to an Alertmanager pod. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `alertmanager` and `config-reloader`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecContainers> getContainers() {
    return containers;
  }


  public void setContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers) {
    this.containers = containers;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec externalUrl(String externalUrl) {
    
    this.externalUrl = externalUrl;
    return this;
  }

   /**
   * The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name.
   * @return externalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name.")

  public String getExternalUrl() {
    return externalUrl;
  }


  public void setExternalUrl(String externalUrl) {
    this.externalUrl = externalUrl;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec forceEnableClusterMode(Boolean forceEnableClusterMode) {
    
    this.forceEnableClusterMode = forceEnableClusterMode;
    return this;
  }

   /**
   * ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica. Use case is e.g. spanning an Alertmanager cluster across Kubernetes clusters with a single replica in each.
   * @return forceEnableClusterMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica. Use case is e.g. spanning an Alertmanager cluster across Kubernetes clusters with a single replica in each.")

  public Boolean getForceEnableClusterMode() {
    return forceEnableClusterMode;
  }


  public void setForceEnableClusterMode(Boolean forceEnableClusterMode) {
    this.forceEnableClusterMode = forceEnableClusterMode;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Alertmanager is being configured.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Alertmanager is being configured.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec imagePullSecrets(List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets) {
    
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addImagePullSecretsItem(ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
   * @return imagePullSecrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod")

  public List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> getImagePullSecrets() {
    return imagePullSecrets;
  }


  public void setImagePullSecrets(List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec initContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers) {
    
    this.initContainers = initContainers;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addInitContainersItem(ComCoreosMonitoringV1ThanosRulerSpecContainers initContainersItem) {
    if (this.initContainers == null) {
      this.initContainers = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecContainers>();
    }
    this.initContainers.add(initContainersItem);
    return this;
  }

   /**
   * InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Alertmanager configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
   * @return initContainers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Alertmanager configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecContainers> getInitContainers() {
    return initContainers;
  }


  public void setInitContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers) {
    this.initContainers = initContainers;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec listenLocal(Boolean listenLocal) {
    
    this.listenLocal = listenLocal;
    return this;
  }

   /**
   * ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP. Note this is only for the Alertmanager UI, not the gossip communication.
   * @return listenLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ListenLocal makes the Alertmanager server listen on loopback, so that it does not bind against the Pod IP. Note this is only for the Alertmanager UI, not the gossip communication.")

  public Boolean getListenLocal() {
    return listenLocal;
  }


  public void setListenLocal(Boolean listenLocal) {
    this.listenLocal = listenLocal;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec logFormat(LogFormatEnum logFormat) {
    
    this.logFormat = logFormat;
    return this;
  }

   /**
   * Log format for Alertmanager to be configured with.
   * @return logFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log format for Alertmanager to be configured with.")

  public LogFormatEnum getLogFormat() {
    return logFormat;
  }


  public void setLogFormat(LogFormatEnum logFormat) {
    this.logFormat = logFormat;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec logLevel(LogLevelEnum logLevel) {
    
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Log level for Alertmanager to be configured with.
   * @return logLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log level for Alertmanager to be configured with.")

  public LogLevelEnum getLogLevel() {
    return logLevel;
  }


  public void setLogLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec minReadySeconds(Integer minReadySeconds) {
    
    this.minReadySeconds = minReadySeconds;
    return this;
  }

   /**
   * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.
   * @return minReadySeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.")

  public Integer getMinReadySeconds() {
    return minReadySeconds;
  }


  public void setMinReadySeconds(Integer minReadySeconds) {
    this.minReadySeconds = minReadySeconds;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * Define which Nodes the Pods are scheduled on.
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define which Nodes the Pods are scheduled on.")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec paused(Boolean paused) {
    
    this.paused = paused;
    return this;
  }

   /**
   * If set to true all actions on the underlying managed objects are not goint to be performed, except for delete actions.
   * @return paused
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to true all actions on the underlying managed objects are not goint to be performed, except for delete actions.")

  public Boolean getPaused() {
    return paused;
  }


  public void setPaused(Boolean paused) {
    this.paused = paused;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec podMetadata(ComCoreosMonitoringV1AlertmanagerSpecPodMetadata podMetadata) {
    
    this.podMetadata = podMetadata;
    return this;
  }

   /**
   * Get podMetadata
   * @return podMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1AlertmanagerSpecPodMetadata getPodMetadata() {
    return podMetadata;
  }


  public void setPodMetadata(ComCoreosMonitoringV1AlertmanagerSpecPodMetadata podMetadata) {
    this.podMetadata = podMetadata;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec portName(String portName) {
    
    this.portName = portName;
    return this;
  }

   /**
   * Port name used for the pods and governing service. This defaults to web
   * @return portName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Port name used for the pods and governing service. This defaults to web")

  public String getPortName() {
    return portName;
  }


  public void setPortName(String portName) {
    this.portName = portName;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec priorityClassName(String priorityClassName) {
    
    this.priorityClassName = priorityClassName;
    return this;
  }

   /**
   * Priority class assigned to the Pods
   * @return priorityClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Priority class assigned to the Pods")

  public String getPriorityClassName() {
    return priorityClassName;
  }


  public void setPriorityClassName(String priorityClassName) {
    this.priorityClassName = priorityClassName;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the running cluster equal to the expected size.
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the running cluster equal to the expected size.")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec resources(ComCoreosMonitoringV1PrometheusSpecResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecResources getResources() {
    return resources;
  }


  public void setResources(ComCoreosMonitoringV1PrometheusSpecResources resources) {
    this.resources = resources;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec retention(String retention) {
    
    this.retention = retention;
    return this;
  }

   /**
   * Time duration Alertmanager shall retain data for. Default is &#39;120h&#39;, and must match the regular expression &#x60;[0-9]+(ms|s|m|h)&#x60; (milliseconds seconds minutes hours).
   * @return retention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).")

  public String getRetention() {
    return retention;
  }


  public void setRetention(String retention) {
    this.retention = retention;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec routePrefix(String routePrefix) {
    
    this.routePrefix = routePrefix;
    return this;
  }

   /**
   * The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with &#x60;kubectl proxy&#x60;.
   * @return routePrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The route prefix Alertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.")

  public String getRoutePrefix() {
    return routePrefix;
  }


  public void setRoutePrefix(String routePrefix) {
    this.routePrefix = routePrefix;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec secrets(List<String> secrets) {
    
    this.secrets = secrets;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addSecretsItem(String secretsItem) {
    if (this.secrets == null) {
      this.secrets = new ArrayList<String>();
    }
    this.secrets.add(secretsItem);
    return this;
  }

   /**
   * Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/&lt;secret-name&gt;.
   * @return secrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.")

  public List<String> getSecrets() {
    return secrets;
  }


  public void setSecrets(List<String> secrets) {
    this.secrets = secrets;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec securityContext(ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext) {
    
    this.securityContext = securityContext;
    return this;
  }

   /**
   * Get securityContext
   * @return securityContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 getSecurityContext() {
    return securityContext;
  }


  public void setSecurityContext(ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext) {
    this.securityContext = securityContext;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec serviceAccountName(String serviceAccountName) {
    
    this.serviceAccountName = serviceAccountName;
    return this;
  }

   /**
   * ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
   * @return serviceAccountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.")

  public String getServiceAccountName() {
    return serviceAccountName;
  }


  public void setServiceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec sha(String sha) {
    
    this.sha = sha;
    return this;
  }

   /**
   * SHA of Alertmanager container image to be deployed. Defaults to the value of &#x60;version&#x60;. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use &#39;image&#39; instead.  The image digest can be specified as part of the image URL.
   * @return sha
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SHA of Alertmanager container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use 'image' instead.  The image digest can be specified as part of the image URL.")

  public String getSha() {
    return sha;
  }


  public void setSha(String sha) {
    this.sha = sha;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec storage(ComCoreosMonitoringV1AlertmanagerSpecStorage storage) {
    
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1AlertmanagerSpecStorage getStorage() {
    return storage;
  }


  public void setStorage(ComCoreosMonitoringV1AlertmanagerSpecStorage storage) {
    this.storage = storage;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Tag of Alertmanager container image to be deployed. Defaults to the value of &#x60;version&#x60;. Version is ignored if Tag is set. Deprecated: use &#39;image&#39; instead.  The image tag can be specified as part of the image URL.
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tag of Alertmanager container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use 'image' instead.  The image tag can be specified as part of the image URL.")

  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec tolerations(List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addTolerationsItem(ComCoreosMonitoringV1ThanosRulerSpecTolerations tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecTolerations>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * If specified, the pod&#39;s tolerations.
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the pod's tolerations.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations) {
    this.tolerations = tolerations;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec topologySpreadConstraints(List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints) {
    
    this.topologySpreadConstraints = topologySpreadConstraints;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addTopologySpreadConstraintsItem(ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints topologySpreadConstraintsItem) {
    if (this.topologySpreadConstraints == null) {
      this.topologySpreadConstraints = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints>();
    }
    this.topologySpreadConstraints.add(topologySpreadConstraintsItem);
    return this;
  }

   /**
   * If specified, the pod&#39;s topology spread constraints.
   * @return topologySpreadConstraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the pod's topology spread constraints.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> getTopologySpreadConstraints() {
    return topologySpreadConstraints;
  }


  public void setTopologySpreadConstraints(List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints) {
    this.topologySpreadConstraints = topologySpreadConstraints;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version the cluster should be on.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version the cluster should be on.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec volumeMounts(List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> volumeMounts) {
    
    this.volumeMounts = volumeMounts;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addVolumeMountsItem(ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

   /**
   * VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the alertmanager container, that are generated as a result of StorageSpec objects.
   * @return volumeMounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the alertmanager container, that are generated as a result of StorageSpec objects.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> getVolumeMounts() {
    return volumeMounts;
  }


  public void setVolumeMounts(List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }


  public ComCoreosMonitoringV1AlertmanagerSpec volumes(List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public ComCoreosMonitoringV1AlertmanagerSpec addVolumesItem(ComCoreosMonitoringV1ThanosRulerSpecVolumes volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecVolumes>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1AlertmanagerSpec {\n");
    sb.append("    additionalPeers: ").append(toIndentedString(additionalPeers)).append("\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    alertmanagerConfigNamespaceSelector: ").append(toIndentedString(alertmanagerConfigNamespaceSelector)).append("\n");
    sb.append("    alertmanagerConfigSelector: ").append(toIndentedString(alertmanagerConfigSelector)).append("\n");
    sb.append("    alertmanagerConfiguration: ").append(toIndentedString(alertmanagerConfiguration)).append("\n");
    sb.append("    baseImage: ").append(toIndentedString(baseImage)).append("\n");
    sb.append("    clusterAdvertiseAddress: ").append(toIndentedString(clusterAdvertiseAddress)).append("\n");
    sb.append("    clusterGossipInterval: ").append(toIndentedString(clusterGossipInterval)).append("\n");
    sb.append("    clusterPeerTimeout: ").append(toIndentedString(clusterPeerTimeout)).append("\n");
    sb.append("    clusterPushpullInterval: ").append(toIndentedString(clusterPushpullInterval)).append("\n");
    sb.append("    configMaps: ").append(toIndentedString(configMaps)).append("\n");
    sb.append("    configSecret: ").append(toIndentedString(configSecret)).append("\n");
    sb.append("    containers: ").append(toIndentedString(containers)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    forceEnableClusterMode: ").append(toIndentedString(forceEnableClusterMode)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    initContainers: ").append(toIndentedString(initContainers)).append("\n");
    sb.append("    listenLocal: ").append(toIndentedString(listenLocal)).append("\n");
    sb.append("    logFormat: ").append(toIndentedString(logFormat)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    minReadySeconds: ").append(toIndentedString(minReadySeconds)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    podMetadata: ").append(toIndentedString(podMetadata)).append("\n");
    sb.append("    portName: ").append(toIndentedString(portName)).append("\n");
    sb.append("    priorityClassName: ").append(toIndentedString(priorityClassName)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    routePrefix: ").append(toIndentedString(routePrefix)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("    sha: ").append(toIndentedString(sha)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    topologySpreadConstraints: ").append(toIndentedString(topologySpreadConstraints)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

