/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecWebTlsConfigCert;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecWebTlsConfigClientCa;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecWebTlsConfigKeySecret;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * WebTLSConfig defines the TLS parameters for HTTPS.
 */
@ApiModel(description = "WebTLSConfig defines the TLS parameters for HTTPS.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1PrometheusSpecWebTlsConfig {
  public static final String SERIALIZED_NAME_CERT = "cert";
  @SerializedName(SERIALIZED_NAME_CERT)
  private ComCoreosMonitoringV1PrometheusSpecWebTlsConfigCert cert;

  public static final String SERIALIZED_NAME_CIPHER_SUITES = "cipherSuites";
  @SerializedName(SERIALIZED_NAME_CIPHER_SUITES)
  private List<String> cipherSuites = null;

  public static final String SERIALIZED_NAME_CLIENT_AUTH_TYPE = "clientAuthType";
  @SerializedName(SERIALIZED_NAME_CLIENT_AUTH_TYPE)
  private String clientAuthType;

  public static final String SERIALIZED_NAME_CLIENT_CA = "client_ca";
  @SerializedName(SERIALIZED_NAME_CLIENT_CA)
  private ComCoreosMonitoringV1PrometheusSpecWebTlsConfigClientCa clientCa;

  public static final String SERIALIZED_NAME_CURVE_PREFERENCES = "curvePreferences";
  @SerializedName(SERIALIZED_NAME_CURVE_PREFERENCES)
  private List<String> curvePreferences = null;

  public static final String SERIALIZED_NAME_KEY_SECRET = "keySecret";
  @SerializedName(SERIALIZED_NAME_KEY_SECRET)
  private ComCoreosMonitoringV1PrometheusSpecWebTlsConfigKeySecret keySecret;

  public static final String SERIALIZED_NAME_MAX_VERSION = "maxVersion";
  @SerializedName(SERIALIZED_NAME_MAX_VERSION)
  private String maxVersion;

  public static final String SERIALIZED_NAME_MIN_VERSION = "minVersion";
  @SerializedName(SERIALIZED_NAME_MIN_VERSION)
  private String minVersion;

  public static final String SERIALIZED_NAME_PREFER_SERVER_CIPHER_SUITES = "preferServerCipherSuites";
  @SerializedName(SERIALIZED_NAME_PREFER_SERVER_CIPHER_SUITES)
  private Boolean preferServerCipherSuites;


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig cert(ComCoreosMonitoringV1PrometheusSpecWebTlsConfigCert cert) {
    
    this.cert = cert;
    return this;
  }

   /**
   * Get cert
   * @return cert
  **/
  @ApiModelProperty(required = true, value = "")

  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfigCert getCert() {
    return cert;
  }


  public void setCert(ComCoreosMonitoringV1PrometheusSpecWebTlsConfigCert cert) {
    this.cert = cert;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig cipherSuites(List<String> cipherSuites) {
    
    this.cipherSuites = cipherSuites;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig addCipherSuitesItem(String cipherSuitesItem) {
    if (this.cipherSuites == null) {
      this.cipherSuites = new ArrayList<String>();
    }
    this.cipherSuites.add(cipherSuitesItem);
    return this;
  }

   /**
   * List of supported cipher suites for TLS versions up to TLS 1.2. If empty, Go default cipher suites are used. Available cipher suites are documented in the go documentation: https://golang.org/pkg/crypto/tls/#pkg-constants
   * @return cipherSuites
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of supported cipher suites for TLS versions up to TLS 1.2. If empty, Go default cipher suites are used. Available cipher suites are documented in the go documentation: https://golang.org/pkg/crypto/tls/#pkg-constants")

  public List<String> getCipherSuites() {
    return cipherSuites;
  }


  public void setCipherSuites(List<String> cipherSuites) {
    this.cipherSuites = cipherSuites;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig clientAuthType(String clientAuthType) {
    
    this.clientAuthType = clientAuthType;
    return this;
  }

   /**
   * Server policy for client authentication. Maps to ClientAuth Policies. For more detail on clientAuth options: https://golang.org/pkg/crypto/tls/#ClientAuthType
   * @return clientAuthType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Server policy for client authentication. Maps to ClientAuth Policies. For more detail on clientAuth options: https://golang.org/pkg/crypto/tls/#ClientAuthType")

  public String getClientAuthType() {
    return clientAuthType;
  }


  public void setClientAuthType(String clientAuthType) {
    this.clientAuthType = clientAuthType;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig clientCa(ComCoreosMonitoringV1PrometheusSpecWebTlsConfigClientCa clientCa) {
    
    this.clientCa = clientCa;
    return this;
  }

   /**
   * Get clientCa
   * @return clientCa
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfigClientCa getClientCa() {
    return clientCa;
  }


  public void setClientCa(ComCoreosMonitoringV1PrometheusSpecWebTlsConfigClientCa clientCa) {
    this.clientCa = clientCa;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig curvePreferences(List<String> curvePreferences) {
    
    this.curvePreferences = curvePreferences;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig addCurvePreferencesItem(String curvePreferencesItem) {
    if (this.curvePreferences == null) {
      this.curvePreferences = new ArrayList<String>();
    }
    this.curvePreferences.add(curvePreferencesItem);
    return this;
  }

   /**
   * Elliptic curves that will be used in an ECDHE handshake, in preference order. Available curves are documented in the go documentation: https://golang.org/pkg/crypto/tls/#CurveID
   * @return curvePreferences
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Elliptic curves that will be used in an ECDHE handshake, in preference order. Available curves are documented in the go documentation: https://golang.org/pkg/crypto/tls/#CurveID")

  public List<String> getCurvePreferences() {
    return curvePreferences;
  }


  public void setCurvePreferences(List<String> curvePreferences) {
    this.curvePreferences = curvePreferences;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig keySecret(ComCoreosMonitoringV1PrometheusSpecWebTlsConfigKeySecret keySecret) {
    
    this.keySecret = keySecret;
    return this;
  }

   /**
   * Get keySecret
   * @return keySecret
  **/
  @ApiModelProperty(required = true, value = "")

  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfigKeySecret getKeySecret() {
    return keySecret;
  }


  public void setKeySecret(ComCoreosMonitoringV1PrometheusSpecWebTlsConfigKeySecret keySecret) {
    this.keySecret = keySecret;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig maxVersion(String maxVersion) {
    
    this.maxVersion = maxVersion;
    return this;
  }

   /**
   * Maximum TLS version that is acceptable. Defaults to TLS13.
   * @return maxVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum TLS version that is acceptable. Defaults to TLS13.")

  public String getMaxVersion() {
    return maxVersion;
  }


  public void setMaxVersion(String maxVersion) {
    this.maxVersion = maxVersion;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig minVersion(String minVersion) {
    
    this.minVersion = minVersion;
    return this;
  }

   /**
   * Minimum TLS version that is acceptable. Defaults to TLS12.
   * @return minVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum TLS version that is acceptable. Defaults to TLS12.")

  public String getMinVersion() {
    return minVersion;
  }


  public void setMinVersion(String minVersion) {
    this.minVersion = minVersion;
  }


  public ComCoreosMonitoringV1PrometheusSpecWebTlsConfig preferServerCipherSuites(Boolean preferServerCipherSuites) {
    
    this.preferServerCipherSuites = preferServerCipherSuites;
    return this;
  }

   /**
   * Controls whether the server selects the client&#39;s most preferred cipher suite, or the server&#39;s most preferred cipher suite. If true then the server&#39;s preference, as expressed in the order of elements in cipherSuites, is used.
   * @return preferServerCipherSuites
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Controls whether the server selects the client's most preferred cipher suite, or the server's most preferred cipher suite. If true then the server's preference, as expressed in the order of elements in cipherSuites, is used.")

  public Boolean getPreferServerCipherSuites() {
    return preferServerCipherSuites;
  }


  public void setPreferServerCipherSuites(Boolean preferServerCipherSuites) {
    this.preferServerCipherSuites = preferServerCipherSuites;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1PrometheusSpecWebTlsConfig {\n");
    sb.append("    cert: ").append(toIndentedString(cert)).append("\n");
    sb.append("    cipherSuites: ").append(toIndentedString(cipherSuites)).append("\n");
    sb.append("    clientAuthType: ").append(toIndentedString(clientAuthType)).append("\n");
    sb.append("    clientCa: ").append(toIndentedString(clientCa)).append("\n");
    sb.append("    curvePreferences: ").append(toIndentedString(curvePreferences)).append("\n");
    sb.append("    keySecret: ").append(toIndentedString(keySecret)).append("\n");
    sb.append("    maxVersion: ").append(toIndentedString(maxVersion)).append("\n");
    sb.append("    minVersion: ").append(toIndentedString(minVersion)).append("\n");
    sb.append("    preferServerCipherSuites: ").append(toIndentedString(preferServerCipherSuites)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

