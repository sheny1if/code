/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * /--rules.alert.*_/ command-line arguments
 */
@ApiModel(description = "/--rules.alert.*_/ command-line arguments")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1PrometheusSpecRulesAlert {
  public static final String SERIALIZED_NAME_FOR_GRACE_PERIOD = "forGracePeriod";
  @SerializedName(SERIALIZED_NAME_FOR_GRACE_PERIOD)
  private String forGracePeriod;

  public static final String SERIALIZED_NAME_FOR_OUTAGE_TOLERANCE = "forOutageTolerance";
  @SerializedName(SERIALIZED_NAME_FOR_OUTAGE_TOLERANCE)
  private String forOutageTolerance;

  public static final String SERIALIZED_NAME_RESEND_DELAY = "resendDelay";
  @SerializedName(SERIALIZED_NAME_RESEND_DELAY)
  private String resendDelay;


  public ComCoreosMonitoringV1PrometheusSpecRulesAlert forGracePeriod(String forGracePeriod) {
    
    this.forGracePeriod = forGracePeriod;
    return this;
  }

   /**
   * Minimum duration between alert and restored &#39;for&#39; state. This is maintained only for alerts with configured &#39;for&#39; time greater than grace period.
   * @return forGracePeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum duration between alert and restored 'for' state. This is maintained only for alerts with configured 'for' time greater than grace period.")

  public String getForGracePeriod() {
    return forGracePeriod;
  }


  public void setForGracePeriod(String forGracePeriod) {
    this.forGracePeriod = forGracePeriod;
  }


  public ComCoreosMonitoringV1PrometheusSpecRulesAlert forOutageTolerance(String forOutageTolerance) {
    
    this.forOutageTolerance = forOutageTolerance;
    return this;
  }

   /**
   * Max time to tolerate prometheus outage for restoring &#39;for&#39; state of alert.
   * @return forOutageTolerance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Max time to tolerate prometheus outage for restoring 'for' state of alert.")

  public String getForOutageTolerance() {
    return forOutageTolerance;
  }


  public void setForOutageTolerance(String forOutageTolerance) {
    this.forOutageTolerance = forOutageTolerance;
  }


  public ComCoreosMonitoringV1PrometheusSpecRulesAlert resendDelay(String resendDelay) {
    
    this.resendDelay = resendDelay;
    return this;
  }

   /**
   * Minimum amount of time to wait before resending an alert to Alertmanager.
   * @return resendDelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum amount of time to wait before resending an alert to Alertmanager.")

  public String getResendDelay() {
    return resendDelay;
  }


  public void setResendDelay(String resendDelay) {
    this.resendDelay = resendDelay;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1PrometheusSpecRulesAlert {\n");
    sb.append("    forGracePeriod: ").append(toIndentedString(forGracePeriod)).append("\n");
    sb.append("    forOutageTolerance: ").append(toIndentedString(forOutageTolerance)).append("\n");
    sb.append("    resendDelay: ").append(toIndentedString(resendDelay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

