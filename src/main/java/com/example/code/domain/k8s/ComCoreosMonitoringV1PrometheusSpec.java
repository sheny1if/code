/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecAdditionalAlertManagerConfigs;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecAdditionalAlertRelabelConfigs;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecAdditionalScrapeConfigs;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecAlerting;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecApiserverConfig;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecArbitraryFSAccessThroughSMs;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecPodMetadata;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecPodMonitorNamespaceSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecPodMonitorSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecProbeNamespaceSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecProbeSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecQuery;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecRemoteRead;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecRemoteWrite;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecResources;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecRuleNamespaceSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecRuleSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecRules;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecServiceMonitorNamespaceSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecServiceMonitorSelector;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecThanos;
import com.example.code.domain.k8s.ComCoreosMonitoringV1PrometheusSpecWeb;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecAffinity;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecContainers;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorage;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTolerations;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecVolumes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Specification of the desired behavior of the Prometheus cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
 */
@ApiModel(description = "Specification of the desired behavior of the Prometheus cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1PrometheusSpec {
  public static final String SERIALIZED_NAME_ADDITIONAL_ALERT_MANAGER_CONFIGS = "additionalAlertManagerConfigs";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_ALERT_MANAGER_CONFIGS)
  private ComCoreosMonitoringV1PrometheusSpecAdditionalAlertManagerConfigs additionalAlertManagerConfigs;

  public static final String SERIALIZED_NAME_ADDITIONAL_ALERT_RELABEL_CONFIGS = "additionalAlertRelabelConfigs";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_ALERT_RELABEL_CONFIGS)
  private ComCoreosMonitoringV1PrometheusSpecAdditionalAlertRelabelConfigs additionalAlertRelabelConfigs;

  public static final String SERIALIZED_NAME_ADDITIONAL_SCRAPE_CONFIGS = "additionalScrapeConfigs";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SCRAPE_CONFIGS)
  private ComCoreosMonitoringV1PrometheusSpecAdditionalScrapeConfigs additionalScrapeConfigs;

  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity;

  public static final String SERIALIZED_NAME_ALERTING = "alerting";
  @SerializedName(SERIALIZED_NAME_ALERTING)
  private ComCoreosMonitoringV1PrometheusSpecAlerting alerting;

  public static final String SERIALIZED_NAME_ALLOW_OVERLAPPING_BLOCKS = "allowOverlappingBlocks";
  @SerializedName(SERIALIZED_NAME_ALLOW_OVERLAPPING_BLOCKS)
  private Boolean allowOverlappingBlocks;

  public static final String SERIALIZED_NAME_APISERVER_CONFIG = "apiserverConfig";
  @SerializedName(SERIALIZED_NAME_APISERVER_CONFIG)
  private ComCoreosMonitoringV1PrometheusSpecApiserverConfig apiserverConfig;

  public static final String SERIALIZED_NAME_ARBITRARY_F_S_ACCESS_THROUGH_S_MS = "arbitraryFSAccessThroughSMs";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_F_S_ACCESS_THROUGH_S_MS)
  private ComCoreosMonitoringV1PrometheusSpecArbitraryFSAccessThroughSMs arbitraryFSAccessThroughSMs;

  public static final String SERIALIZED_NAME_BASE_IMAGE = "baseImage";
  @SerializedName(SERIALIZED_NAME_BASE_IMAGE)
  private String baseImage;

  public static final String SERIALIZED_NAME_CONFIG_MAPS = "configMaps";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAPS)
  private List<String> configMaps = null;

  public static final String SERIALIZED_NAME_CONTAINERS = "containers";
  @SerializedName(SERIALIZED_NAME_CONTAINERS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers = null;

  public static final String SERIALIZED_NAME_DISABLE_COMPACTION = "disableCompaction";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMPACTION)
  private Boolean disableCompaction;

  public static final String SERIALIZED_NAME_ENABLE_ADMIN_A_P_I = "enableAdminAPI";
  @SerializedName(SERIALIZED_NAME_ENABLE_ADMIN_A_P_I)
  private Boolean enableAdminAPI;

  public static final String SERIALIZED_NAME_ENABLE_FEATURES = "enableFeatures";
  @SerializedName(SERIALIZED_NAME_ENABLE_FEATURES)
  private List<String> enableFeatures = null;

  public static final String SERIALIZED_NAME_ENABLE_REMOTE_WRITE_RECEIVER = "enableRemoteWriteReceiver";
  @SerializedName(SERIALIZED_NAME_ENABLE_REMOTE_WRITE_RECEIVER)
  private Boolean enableRemoteWriteReceiver;

  public static final String SERIALIZED_NAME_ENFORCED_BODY_SIZE_LIMIT = "enforcedBodySizeLimit";
  @SerializedName(SERIALIZED_NAME_ENFORCED_BODY_SIZE_LIMIT)
  private String enforcedBodySizeLimit;

  public static final String SERIALIZED_NAME_ENFORCED_LABEL_LIMIT = "enforcedLabelLimit";
  @SerializedName(SERIALIZED_NAME_ENFORCED_LABEL_LIMIT)
  private Long enforcedLabelLimit;

  public static final String SERIALIZED_NAME_ENFORCED_LABEL_NAME_LENGTH_LIMIT = "enforcedLabelNameLengthLimit";
  @SerializedName(SERIALIZED_NAME_ENFORCED_LABEL_NAME_LENGTH_LIMIT)
  private Long enforcedLabelNameLengthLimit;

  public static final String SERIALIZED_NAME_ENFORCED_LABEL_VALUE_LENGTH_LIMIT = "enforcedLabelValueLengthLimit";
  @SerializedName(SERIALIZED_NAME_ENFORCED_LABEL_VALUE_LENGTH_LIMIT)
  private Long enforcedLabelValueLengthLimit;

  public static final String SERIALIZED_NAME_ENFORCED_NAMESPACE_LABEL = "enforcedNamespaceLabel";
  @SerializedName(SERIALIZED_NAME_ENFORCED_NAMESPACE_LABEL)
  private String enforcedNamespaceLabel;

  public static final String SERIALIZED_NAME_ENFORCED_SAMPLE_LIMIT = "enforcedSampleLimit";
  @SerializedName(SERIALIZED_NAME_ENFORCED_SAMPLE_LIMIT)
  private Long enforcedSampleLimit;

  public static final String SERIALIZED_NAME_ENFORCED_TARGET_LIMIT = "enforcedTargetLimit";
  @SerializedName(SERIALIZED_NAME_ENFORCED_TARGET_LIMIT)
  private Long enforcedTargetLimit;

  public static final String SERIALIZED_NAME_EVALUATION_INTERVAL = "evaluationInterval";
  @SerializedName(SERIALIZED_NAME_EVALUATION_INTERVAL)
  private String evaluationInterval;

  public static final String SERIALIZED_NAME_EXCLUDED_FROM_ENFORCEMENT = "excludedFromEnforcement";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_FROM_ENFORCEMENT)
  private List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> excludedFromEnforcement = null;

  public static final String SERIALIZED_NAME_EXTERNAL_LABELS = "externalLabels";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_LABELS)
  private Map<String, String> externalLabels = null;

  public static final String SERIALIZED_NAME_EXTERNAL_URL = "externalUrl";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_URL)
  private String externalUrl;

  public static final String SERIALIZED_NAME_IGNORE_NAMESPACE_SELECTORS = "ignoreNamespaceSelectors";
  @SerializedName(SERIALIZED_NAME_IGNORE_NAMESPACE_SELECTORS)
  private Boolean ignoreNamespaceSelectors;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets = null;

  public static final String SERIALIZED_NAME_INIT_CONTAINERS = "initContainers";
  @SerializedName(SERIALIZED_NAME_INIT_CONTAINERS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers = null;

  public static final String SERIALIZED_NAME_LISTEN_LOCAL = "listenLocal";
  @SerializedName(SERIALIZED_NAME_LISTEN_LOCAL)
  private Boolean listenLocal;

  /**
   * Log format for Prometheus to be configured with.
   */
  @JsonAdapter(LogFormatEnum.Adapter.class)
  public enum LogFormatEnum {
    EMPTY(""),
    
    LOGFMT("logfmt"),
    
    JSON("json");

    private String value;

    LogFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogFormatEnum fromValue(String value) {
      for (LogFormatEnum b : LogFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogFormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOG_FORMAT = "logFormat";
  @SerializedName(SERIALIZED_NAME_LOG_FORMAT)
  private LogFormatEnum logFormat;

  /**
   * Log level for Prometheus to be configured with.
   */
  @JsonAdapter(LogLevelEnum.Adapter.class)
  public enum LogLevelEnum {
    EMPTY(""),
    
    DEBUG("debug"),
    
    INFO("info"),
    
    WARN("warn"),
    
    ERROR("error");

    private String value;

    LogLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogLevelEnum fromValue(String value) {
      for (LogLevelEnum b : LogLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogLevelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOG_LEVEL = "logLevel";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private LogLevelEnum logLevel;

  public static final String SERIALIZED_NAME_MIN_READY_SECONDS = "minReadySeconds";
  @SerializedName(SERIALIZED_NAME_MIN_READY_SECONDS)
  private Integer minReadySeconds;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_OVERRIDE_HONOR_LABELS = "overrideHonorLabels";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_HONOR_LABELS)
  private Boolean overrideHonorLabels;

  public static final String SERIALIZED_NAME_OVERRIDE_HONOR_TIMESTAMPS = "overrideHonorTimestamps";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_HONOR_TIMESTAMPS)
  private Boolean overrideHonorTimestamps;

  public static final String SERIALIZED_NAME_PAUSED = "paused";
  @SerializedName(SERIALIZED_NAME_PAUSED)
  private Boolean paused;

  public static final String SERIALIZED_NAME_POD_METADATA = "podMetadata";
  @SerializedName(SERIALIZED_NAME_POD_METADATA)
  private ComCoreosMonitoringV1PrometheusSpecPodMetadata podMetadata;

  public static final String SERIALIZED_NAME_POD_MONITOR_NAMESPACE_SELECTOR = "podMonitorNamespaceSelector";
  @SerializedName(SERIALIZED_NAME_POD_MONITOR_NAMESPACE_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecPodMonitorNamespaceSelector podMonitorNamespaceSelector;

  public static final String SERIALIZED_NAME_POD_MONITOR_SELECTOR = "podMonitorSelector";
  @SerializedName(SERIALIZED_NAME_POD_MONITOR_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecPodMonitorSelector podMonitorSelector;

  public static final String SERIALIZED_NAME_PORT_NAME = "portName";
  @SerializedName(SERIALIZED_NAME_PORT_NAME)
  private String portName;

  public static final String SERIALIZED_NAME_PRIORITY_CLASS_NAME = "priorityClassName";
  @SerializedName(SERIALIZED_NAME_PRIORITY_CLASS_NAME)
  private String priorityClassName;

  public static final String SERIALIZED_NAME_PROBE_NAMESPACE_SELECTOR = "probeNamespaceSelector";
  @SerializedName(SERIALIZED_NAME_PROBE_NAMESPACE_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecProbeNamespaceSelector probeNamespaceSelector;

  public static final String SERIALIZED_NAME_PROBE_SELECTOR = "probeSelector";
  @SerializedName(SERIALIZED_NAME_PROBE_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecProbeSelector probeSelector;

  public static final String SERIALIZED_NAME_PROMETHEUS_EXTERNAL_LABEL_NAME = "prometheusExternalLabelName";
  @SerializedName(SERIALIZED_NAME_PROMETHEUS_EXTERNAL_LABEL_NAME)
  private String prometheusExternalLabelName;

  public static final String SERIALIZED_NAME_PROMETHEUS_RULES_EXCLUDED_FROM_ENFORCE = "prometheusRulesExcludedFromEnforce";
  @SerializedName(SERIALIZED_NAME_PROMETHEUS_RULES_EXCLUDED_FROM_ENFORCE)
  private List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> prometheusRulesExcludedFromEnforce = null;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private ComCoreosMonitoringV1PrometheusSpecQuery query;

  public static final String SERIALIZED_NAME_QUERY_LOG_FILE = "queryLogFile";
  @SerializedName(SERIALIZED_NAME_QUERY_LOG_FILE)
  private String queryLogFile;

  public static final String SERIALIZED_NAME_REMOTE_READ = "remoteRead";
  @SerializedName(SERIALIZED_NAME_REMOTE_READ)
  private List<ComCoreosMonitoringV1PrometheusSpecRemoteRead> remoteRead = null;

  public static final String SERIALIZED_NAME_REMOTE_WRITE = "remoteWrite";
  @SerializedName(SERIALIZED_NAME_REMOTE_WRITE)
  private List<ComCoreosMonitoringV1PrometheusSpecRemoteWrite> remoteWrite = null;

  public static final String SERIALIZED_NAME_REPLICA_EXTERNAL_LABEL_NAME = "replicaExternalLabelName";
  @SerializedName(SERIALIZED_NAME_REPLICA_EXTERNAL_LABEL_NAME)
  private String replicaExternalLabelName;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private ComCoreosMonitoringV1PrometheusSpecResources resources;

  public static final String SERIALIZED_NAME_RETENTION = "retention";
  @SerializedName(SERIALIZED_NAME_RETENTION)
  private String retention;

  public static final String SERIALIZED_NAME_RETENTION_SIZE = "retentionSize";
  @SerializedName(SERIALIZED_NAME_RETENTION_SIZE)
  private String retentionSize;

  public static final String SERIALIZED_NAME_ROUTE_PREFIX = "routePrefix";
  @SerializedName(SERIALIZED_NAME_ROUTE_PREFIX)
  private String routePrefix;

  public static final String SERIALIZED_NAME_RULE_NAMESPACE_SELECTOR = "ruleNamespaceSelector";
  @SerializedName(SERIALIZED_NAME_RULE_NAMESPACE_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecRuleNamespaceSelector ruleNamespaceSelector;

  public static final String SERIALIZED_NAME_RULE_SELECTOR = "ruleSelector";
  @SerializedName(SERIALIZED_NAME_RULE_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecRuleSelector ruleSelector;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private ComCoreosMonitoringV1PrometheusSpecRules rules;

  public static final String SERIALIZED_NAME_SCRAPE_INTERVAL = "scrapeInterval";
  @SerializedName(SERIALIZED_NAME_SCRAPE_INTERVAL)
  private String scrapeInterval;

  public static final String SERIALIZED_NAME_SCRAPE_TIMEOUT = "scrapeTimeout";
  @SerializedName(SERIALIZED_NAME_SCRAPE_TIMEOUT)
  private String scrapeTimeout;

  public static final String SERIALIZED_NAME_SECRETS = "secrets";
  @SerializedName(SERIALIZED_NAME_SECRETS)
  private List<String> secrets = null;

  public static final String SERIALIZED_NAME_SECURITY_CONTEXT = "securityContext";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONTEXT)
  private ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_NAME = "serviceAccountName";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_NAME)
  private String serviceAccountName;

  public static final String SERIALIZED_NAME_SERVICE_MONITOR_NAMESPACE_SELECTOR = "serviceMonitorNamespaceSelector";
  @SerializedName(SERIALIZED_NAME_SERVICE_MONITOR_NAMESPACE_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecServiceMonitorNamespaceSelector serviceMonitorNamespaceSelector;

  public static final String SERIALIZED_NAME_SERVICE_MONITOR_SELECTOR = "serviceMonitorSelector";
  @SerializedName(SERIALIZED_NAME_SERVICE_MONITOR_SELECTOR)
  private ComCoreosMonitoringV1PrometheusSpecServiceMonitorSelector serviceMonitorSelector;

  public static final String SERIALIZED_NAME_SHA = "sha";
  @SerializedName(SERIALIZED_NAME_SHA)
  private String sha;

  public static final String SERIALIZED_NAME_SHARDS = "shards";
  @SerializedName(SERIALIZED_NAME_SHARDS)
  private Integer shards;

  public static final String SERIALIZED_NAME_STORAGE = "storage";
  @SerializedName(SERIALIZED_NAME_STORAGE)
  private ComCoreosMonitoringV1ThanosRulerSpecStorage storage;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_THANOS = "thanos";
  @SerializedName(SERIALIZED_NAME_THANOS)
  private ComCoreosMonitoringV1PrometheusSpecThanos thanos;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations = null;

  public static final String SERIALIZED_NAME_TOPOLOGY_SPREAD_CONSTRAINTS = "topologySpreadConstraints";
  @SerializedName(SERIALIZED_NAME_TOPOLOGY_SPREAD_CONSTRAINTS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_VOLUME_MOUNTS = "volumeMounts";
  @SerializedName(SERIALIZED_NAME_VOLUME_MOUNTS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> volumeMounts = null;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes = null;

  public static final String SERIALIZED_NAME_WAL_COMPRESSION = "walCompression";
  @SerializedName(SERIALIZED_NAME_WAL_COMPRESSION)
  private Boolean walCompression;

  public static final String SERIALIZED_NAME_WEB = "web";
  @SerializedName(SERIALIZED_NAME_WEB)
  private ComCoreosMonitoringV1PrometheusSpecWeb web;


  public ComCoreosMonitoringV1PrometheusSpec additionalAlertManagerConfigs(ComCoreosMonitoringV1PrometheusSpecAdditionalAlertManagerConfigs additionalAlertManagerConfigs) {
    
    this.additionalAlertManagerConfigs = additionalAlertManagerConfigs;
    return this;
  }

   /**
   * Get additionalAlertManagerConfigs
   * @return additionalAlertManagerConfigs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecAdditionalAlertManagerConfigs getAdditionalAlertManagerConfigs() {
    return additionalAlertManagerConfigs;
  }


  public void setAdditionalAlertManagerConfigs(ComCoreosMonitoringV1PrometheusSpecAdditionalAlertManagerConfigs additionalAlertManagerConfigs) {
    this.additionalAlertManagerConfigs = additionalAlertManagerConfigs;
  }


  public ComCoreosMonitoringV1PrometheusSpec additionalAlertRelabelConfigs(ComCoreosMonitoringV1PrometheusSpecAdditionalAlertRelabelConfigs additionalAlertRelabelConfigs) {
    
    this.additionalAlertRelabelConfigs = additionalAlertRelabelConfigs;
    return this;
  }

   /**
   * Get additionalAlertRelabelConfigs
   * @return additionalAlertRelabelConfigs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecAdditionalAlertRelabelConfigs getAdditionalAlertRelabelConfigs() {
    return additionalAlertRelabelConfigs;
  }


  public void setAdditionalAlertRelabelConfigs(ComCoreosMonitoringV1PrometheusSpecAdditionalAlertRelabelConfigs additionalAlertRelabelConfigs) {
    this.additionalAlertRelabelConfigs = additionalAlertRelabelConfigs;
  }


  public ComCoreosMonitoringV1PrometheusSpec additionalScrapeConfigs(ComCoreosMonitoringV1PrometheusSpecAdditionalScrapeConfigs additionalScrapeConfigs) {
    
    this.additionalScrapeConfigs = additionalScrapeConfigs;
    return this;
  }

   /**
   * Get additionalScrapeConfigs
   * @return additionalScrapeConfigs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecAdditionalScrapeConfigs getAdditionalScrapeConfigs() {
    return additionalScrapeConfigs;
  }


  public void setAdditionalScrapeConfigs(ComCoreosMonitoringV1PrometheusSpecAdditionalScrapeConfigs additionalScrapeConfigs) {
    this.additionalScrapeConfigs = additionalScrapeConfigs;
  }


  public ComCoreosMonitoringV1PrometheusSpec affinity(ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecAffinity getAffinity() {
    return affinity;
  }


  public void setAffinity(ComCoreosMonitoringV1ThanosRulerSpecAffinity affinity) {
    this.affinity = affinity;
  }


  public ComCoreosMonitoringV1PrometheusSpec alerting(ComCoreosMonitoringV1PrometheusSpecAlerting alerting) {
    
    this.alerting = alerting;
    return this;
  }

   /**
   * Get alerting
   * @return alerting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecAlerting getAlerting() {
    return alerting;
  }


  public void setAlerting(ComCoreosMonitoringV1PrometheusSpecAlerting alerting) {
    this.alerting = alerting;
  }


  public ComCoreosMonitoringV1PrometheusSpec allowOverlappingBlocks(Boolean allowOverlappingBlocks) {
    
    this.allowOverlappingBlocks = allowOverlappingBlocks;
    return this;
  }

   /**
   * AllowOverlappingBlocks enables vertical compaction and vertical query merge in Prometheus. This is still experimental in Prometheus so it may change in any upcoming release.
   * @return allowOverlappingBlocks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AllowOverlappingBlocks enables vertical compaction and vertical query merge in Prometheus. This is still experimental in Prometheus so it may change in any upcoming release.")

  public Boolean getAllowOverlappingBlocks() {
    return allowOverlappingBlocks;
  }


  public void setAllowOverlappingBlocks(Boolean allowOverlappingBlocks) {
    this.allowOverlappingBlocks = allowOverlappingBlocks;
  }


  public ComCoreosMonitoringV1PrometheusSpec apiserverConfig(ComCoreosMonitoringV1PrometheusSpecApiserverConfig apiserverConfig) {
    
    this.apiserverConfig = apiserverConfig;
    return this;
  }

   /**
   * Get apiserverConfig
   * @return apiserverConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecApiserverConfig getApiserverConfig() {
    return apiserverConfig;
  }


  public void setApiserverConfig(ComCoreosMonitoringV1PrometheusSpecApiserverConfig apiserverConfig) {
    this.apiserverConfig = apiserverConfig;
  }


  public ComCoreosMonitoringV1PrometheusSpec arbitraryFSAccessThroughSMs(ComCoreosMonitoringV1PrometheusSpecArbitraryFSAccessThroughSMs arbitraryFSAccessThroughSMs) {
    
    this.arbitraryFSAccessThroughSMs = arbitraryFSAccessThroughSMs;
    return this;
  }

   /**
   * Get arbitraryFSAccessThroughSMs
   * @return arbitraryFSAccessThroughSMs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecArbitraryFSAccessThroughSMs getArbitraryFSAccessThroughSMs() {
    return arbitraryFSAccessThroughSMs;
  }


  public void setArbitraryFSAccessThroughSMs(ComCoreosMonitoringV1PrometheusSpecArbitraryFSAccessThroughSMs arbitraryFSAccessThroughSMs) {
    this.arbitraryFSAccessThroughSMs = arbitraryFSAccessThroughSMs;
  }


  public ComCoreosMonitoringV1PrometheusSpec baseImage(String baseImage) {
    
    this.baseImage = baseImage;
    return this;
  }

   /**
   * Base image to use for a Prometheus deployment. Deprecated: use &#39;image&#39; instead
   * @return baseImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base image to use for a Prometheus deployment. Deprecated: use 'image' instead")

  public String getBaseImage() {
    return baseImage;
  }


  public void setBaseImage(String baseImage) {
    this.baseImage = baseImage;
  }


  public ComCoreosMonitoringV1PrometheusSpec configMaps(List<String> configMaps) {
    
    this.configMaps = configMaps;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addConfigMapsItem(String configMapsItem) {
    if (this.configMaps == null) {
      this.configMaps = new ArrayList<String>();
    }
    this.configMaps.add(configMapsItem);
    return this;
  }

   /**
   * ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/&lt;configmap-name&gt;.
   * @return configMaps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.")

  public List<String> getConfigMaps() {
    return configMaps;
  }


  public void setConfigMaps(List<String> configMaps) {
    this.configMaps = configMaps;
  }


  public ComCoreosMonitoringV1PrometheusSpec containers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers) {
    
    this.containers = containers;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addContainersItem(ComCoreosMonitoringV1ThanosRulerSpecContainers containersItem) {
    if (this.containers == null) {
      this.containers = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecContainers>();
    }
    this.containers.add(containersItem);
    return this;
  }

   /**
   * Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a Prometheus pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: &#x60;prometheus&#x60;, &#x60;config-reloader&#x60;, and &#x60;thanos-sidecar&#x60;. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
   * @return containers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a Prometheus pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `prometheus`, `config-reloader`, and `thanos-sidecar`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecContainers> getContainers() {
    return containers;
  }


  public void setContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> containers) {
    this.containers = containers;
  }


  public ComCoreosMonitoringV1PrometheusSpec disableCompaction(Boolean disableCompaction) {
    
    this.disableCompaction = disableCompaction;
    return this;
  }

   /**
   * Disable prometheus compaction.
   * @return disableCompaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disable prometheus compaction.")

  public Boolean getDisableCompaction() {
    return disableCompaction;
  }


  public void setDisableCompaction(Boolean disableCompaction) {
    this.disableCompaction = disableCompaction;
  }


  public ComCoreosMonitoringV1PrometheusSpec enableAdminAPI(Boolean enableAdminAPI) {
    
    this.enableAdminAPI = enableAdminAPI;
    return this;
  }

   /**
   * Enable access to prometheus web admin API. Defaults to the value of &#x60;false&#x60;. WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis
   * @return enableAdminAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable access to prometheus web admin API. Defaults to the value of `false`. WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis")

  public Boolean getEnableAdminAPI() {
    return enableAdminAPI;
  }


  public void setEnableAdminAPI(Boolean enableAdminAPI) {
    this.enableAdminAPI = enableAdminAPI;
  }


  public ComCoreosMonitoringV1PrometheusSpec enableFeatures(List<String> enableFeatures) {
    
    this.enableFeatures = enableFeatures;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addEnableFeaturesItem(String enableFeaturesItem) {
    if (this.enableFeatures == null) {
      this.enableFeatures = new ArrayList<String>();
    }
    this.enableFeatures.add(enableFeaturesItem);
    return this;
  }

   /**
   * Enable access to Prometheus disabled features. By default, no features are enabled. Enabling disabled features is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice. For more information see https://prometheus.io/docs/prometheus/latest/disabled_features/
   * @return enableFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable access to Prometheus disabled features. By default, no features are enabled. Enabling disabled features is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice. For more information see https://prometheus.io/docs/prometheus/latest/disabled_features/")

  public List<String> getEnableFeatures() {
    return enableFeatures;
  }


  public void setEnableFeatures(List<String> enableFeatures) {
    this.enableFeatures = enableFeatures;
  }


  public ComCoreosMonitoringV1PrometheusSpec enableRemoteWriteReceiver(Boolean enableRemoteWriteReceiver) {
    
    this.enableRemoteWriteReceiver = enableRemoteWriteReceiver;
    return this;
  }

   /**
   * Enable Prometheus to be used as a receiver for the Prometheus remote write protocol. Defaults to the value of &#x60;false&#x60;. WARNING: This is not considered an efficient way of ingesting samples. Use it with caution for specific low-volume use cases. It is not suitable for replacing the ingestion via scraping and turning Prometheus into a push-based metrics collection system. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#remote-write-receiver Only valid in Prometheus versions 2.33.0 and newer.
   * @return enableRemoteWriteReceiver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable Prometheus to be used as a receiver for the Prometheus remote write protocol. Defaults to the value of `false`. WARNING: This is not considered an efficient way of ingesting samples. Use it with caution for specific low-volume use cases. It is not suitable for replacing the ingestion via scraping and turning Prometheus into a push-based metrics collection system. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#remote-write-receiver Only valid in Prometheus versions 2.33.0 and newer.")

  public Boolean getEnableRemoteWriteReceiver() {
    return enableRemoteWriteReceiver;
  }


  public void setEnableRemoteWriteReceiver(Boolean enableRemoteWriteReceiver) {
    this.enableRemoteWriteReceiver = enableRemoteWriteReceiver;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedBodySizeLimit(String enforcedBodySizeLimit) {
    
    this.enforcedBodySizeLimit = enforcedBodySizeLimit;
    return this;
  }

   /**
   * EnforcedBodySizeLimit defines the maximum size of uncompressed response body that will be accepted by Prometheus. Targets responding with a body larger than this many bytes will cause the scrape to fail. Example: 100MB. If defined, the limit will apply to all service/pod monitors and probes. This is an experimental feature, this behaviour could change or be removed in the future. Only valid in Prometheus versions 2.28.0 and newer.
   * @return enforcedBodySizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EnforcedBodySizeLimit defines the maximum size of uncompressed response body that will be accepted by Prometheus. Targets responding with a body larger than this many bytes will cause the scrape to fail. Example: 100MB. If defined, the limit will apply to all service/pod monitors and probes. This is an experimental feature, this behaviour could change or be removed in the future. Only valid in Prometheus versions 2.28.0 and newer.")

  public String getEnforcedBodySizeLimit() {
    return enforcedBodySizeLimit;
  }


  public void setEnforcedBodySizeLimit(String enforcedBodySizeLimit) {
    this.enforcedBodySizeLimit = enforcedBodySizeLimit;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedLabelLimit(Long enforcedLabelLimit) {
    
    this.enforcedLabelLimit = enforcedLabelLimit;
    return this;
  }

   /**
   * Per-scrape limit on number of labels that will be accepted for a sample. If more than this number of labels are present post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.
   * @return enforcedLabelLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Per-scrape limit on number of labels that will be accepted for a sample. If more than this number of labels are present post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.")

  public Long getEnforcedLabelLimit() {
    return enforcedLabelLimit;
  }


  public void setEnforcedLabelLimit(Long enforcedLabelLimit) {
    this.enforcedLabelLimit = enforcedLabelLimit;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedLabelNameLengthLimit(Long enforcedLabelNameLengthLimit) {
    
    this.enforcedLabelNameLengthLimit = enforcedLabelNameLengthLimit;
    return this;
  }

   /**
   * Per-scrape limit on length of labels name that will be accepted for a sample. If a label name is longer than this number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.
   * @return enforcedLabelNameLengthLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Per-scrape limit on length of labels name that will be accepted for a sample. If a label name is longer than this number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.")

  public Long getEnforcedLabelNameLengthLimit() {
    return enforcedLabelNameLengthLimit;
  }


  public void setEnforcedLabelNameLengthLimit(Long enforcedLabelNameLengthLimit) {
    this.enforcedLabelNameLengthLimit = enforcedLabelNameLengthLimit;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedLabelValueLengthLimit(Long enforcedLabelValueLengthLimit) {
    
    this.enforcedLabelValueLengthLimit = enforcedLabelValueLengthLimit;
    return this;
  }

   /**
   * Per-scrape limit on length of labels value that will be accepted for a sample. If a label value is longer than this number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.
   * @return enforcedLabelValueLengthLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Per-scrape limit on length of labels value that will be accepted for a sample. If a label value is longer than this number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.")

  public Long getEnforcedLabelValueLengthLimit() {
    return enforcedLabelValueLengthLimit;
  }


  public void setEnforcedLabelValueLengthLimit(Long enforcedLabelValueLengthLimit) {
    this.enforcedLabelValueLengthLimit = enforcedLabelValueLengthLimit;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedNamespaceLabel(String enforcedNamespaceLabel) {
    
    this.enforcedNamespaceLabel = enforcedNamespaceLabel;
    return this;
  }

   /**
   * EnforcedNamespaceLabel If set, a label will be added to   1. all user-metrics (created by &#x60;ServiceMonitor&#x60;, &#x60;PodMonitor&#x60; and &#x60;Probe&#x60; objects) and 2. in all &#x60;PrometheusRule&#x60; objects (except the ones excluded in &#x60;prometheusRulesExcludedFromEnforce&#x60;) to * alerting &amp; recording rules and * the metrics used in their expressions (&#x60;expr&#x60;).   Label name is this field&#39;s value. Label value is the namespace of the created object (mentioned above).
   * @return enforcedNamespaceLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EnforcedNamespaceLabel If set, a label will be added to   1. all user-metrics (created by `ServiceMonitor`, `PodMonitor` and `Probe` objects) and 2. in all `PrometheusRule` objects (except the ones excluded in `prometheusRulesExcludedFromEnforce`) to * alerting & recording rules and * the metrics used in their expressions (`expr`).   Label name is this field's value. Label value is the namespace of the created object (mentioned above).")

  public String getEnforcedNamespaceLabel() {
    return enforcedNamespaceLabel;
  }


  public void setEnforcedNamespaceLabel(String enforcedNamespaceLabel) {
    this.enforcedNamespaceLabel = enforcedNamespaceLabel;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedSampleLimit(Long enforcedSampleLimit) {
    
    this.enforcedSampleLimit = enforcedSampleLimit;
    return this;
  }

   /**
   * EnforcedSampleLimit defines global limit on number of scraped samples that will be accepted. This overrides any SampleLimit set per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the SampleLimit to keep overall number of samples/series under the desired limit. Note that if SampleLimit is lower that value will be taken instead.
   * @return enforcedSampleLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EnforcedSampleLimit defines global limit on number of scraped samples that will be accepted. This overrides any SampleLimit set per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the SampleLimit to keep overall number of samples/series under the desired limit. Note that if SampleLimit is lower that value will be taken instead.")

  public Long getEnforcedSampleLimit() {
    return enforcedSampleLimit;
  }


  public void setEnforcedSampleLimit(Long enforcedSampleLimit) {
    this.enforcedSampleLimit = enforcedSampleLimit;
  }


  public ComCoreosMonitoringV1PrometheusSpec enforcedTargetLimit(Long enforcedTargetLimit) {
    
    this.enforcedTargetLimit = enforcedTargetLimit;
    return this;
  }

   /**
   * EnforcedTargetLimit defines a global limit on the number of scraped targets.  This overrides any TargetLimit set per ServiceMonitor or/and PodMonitor.  It is meant to be used by admins to enforce the TargetLimit to keep the overall number of targets under the desired limit. Note that if TargetLimit is lower, that value will be taken instead, except if either value is zero, in which case the non-zero value will be used.  If both values are zero, no limit is enforced.
   * @return enforcedTargetLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EnforcedTargetLimit defines a global limit on the number of scraped targets.  This overrides any TargetLimit set per ServiceMonitor or/and PodMonitor.  It is meant to be used by admins to enforce the TargetLimit to keep the overall number of targets under the desired limit. Note that if TargetLimit is lower, that value will be taken instead, except if either value is zero, in which case the non-zero value will be used.  If both values are zero, no limit is enforced.")

  public Long getEnforcedTargetLimit() {
    return enforcedTargetLimit;
  }


  public void setEnforcedTargetLimit(Long enforcedTargetLimit) {
    this.enforcedTargetLimit = enforcedTargetLimit;
  }


  public ComCoreosMonitoringV1PrometheusSpec evaluationInterval(String evaluationInterval) {
    
    this.evaluationInterval = evaluationInterval;
    return this;
  }

   /**
   * Interval between consecutive evaluations. Default: &#x60;1m&#x60;
   * @return evaluationInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interval between consecutive evaluations. Default: `1m`")

  public String getEvaluationInterval() {
    return evaluationInterval;
  }


  public void setEvaluationInterval(String evaluationInterval) {
    this.evaluationInterval = evaluationInterval;
  }


  public ComCoreosMonitoringV1PrometheusSpec excludedFromEnforcement(List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> excludedFromEnforcement) {
    
    this.excludedFromEnforcement = excludedFromEnforcement;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addExcludedFromEnforcementItem(ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement excludedFromEnforcementItem) {
    if (this.excludedFromEnforcement == null) {
      this.excludedFromEnforcement = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement>();
    }
    this.excludedFromEnforcement.add(excludedFromEnforcementItem);
    return this;
  }

   /**
   * List of references to PodMonitor, ServiceMonitor, Probe and PrometheusRule objects to be excluded from enforcing a namespace label of origin. Applies only if enforcedNamespaceLabel set to true.
   * @return excludedFromEnforcement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of references to PodMonitor, ServiceMonitor, Probe and PrometheusRule objects to be excluded from enforcing a namespace label of origin. Applies only if enforcedNamespaceLabel set to true.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> getExcludedFromEnforcement() {
    return excludedFromEnforcement;
  }


  public void setExcludedFromEnforcement(List<ComCoreosMonitoringV1ThanosRulerSpecExcludedFromEnforcement> excludedFromEnforcement) {
    this.excludedFromEnforcement = excludedFromEnforcement;
  }


  public ComCoreosMonitoringV1PrometheusSpec externalLabels(Map<String, String> externalLabels) {
    
    this.externalLabels = externalLabels;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec putExternalLabelsItem(String key, String externalLabelsItem) {
    if (this.externalLabels == null) {
      this.externalLabels = new HashMap<String, String>();
    }
    this.externalLabels.put(key, externalLabelsItem);
    return this;
  }

   /**
   * The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager).
   * @return externalLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager).")

  public Map<String, String> getExternalLabels() {
    return externalLabels;
  }


  public void setExternalLabels(Map<String, String> externalLabels) {
    this.externalLabels = externalLabels;
  }


  public ComCoreosMonitoringV1PrometheusSpec externalUrl(String externalUrl) {
    
    this.externalUrl = externalUrl;
    return this;
  }

   /**
   * The external URL the Prometheus instances will be available under. This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name.
   * @return externalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The external URL the Prometheus instances will be available under. This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name.")

  public String getExternalUrl() {
    return externalUrl;
  }


  public void setExternalUrl(String externalUrl) {
    this.externalUrl = externalUrl;
  }


  public ComCoreosMonitoringV1PrometheusSpec ignoreNamespaceSelectors(Boolean ignoreNamespaceSelectors) {
    
    this.ignoreNamespaceSelectors = ignoreNamespaceSelectors;
    return this;
  }

   /**
   * IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from all PodMonitor, ServiceMonitor and Probe objects. They will only discover endpoints within their current namespace. Defaults to false.
   * @return ignoreNamespaceSelectors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from all PodMonitor, ServiceMonitor and Probe objects. They will only discover endpoints within their current namespace. Defaults to false.")

  public Boolean getIgnoreNamespaceSelectors() {
    return ignoreNamespaceSelectors;
  }


  public void setIgnoreNamespaceSelectors(Boolean ignoreNamespaceSelectors) {
    this.ignoreNamespaceSelectors = ignoreNamespaceSelectors;
  }


  public ComCoreosMonitoringV1PrometheusSpec image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Prometheus is being configured.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Prometheus is being configured.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public ComCoreosMonitoringV1PrometheusSpec imagePullSecrets(List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets) {
    
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addImagePullSecretsItem(ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
   * @return imagePullSecrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod")

  public List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> getImagePullSecrets() {
    return imagePullSecrets;
  }


  public void setImagePullSecrets(List<ComCoreosMonitoringV1ThanosRulerSpecImagePullSecrets> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public ComCoreosMonitoringV1PrometheusSpec initContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers) {
    
    this.initContainers = initContainers;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addInitContainersItem(ComCoreosMonitoringV1ThanosRulerSpecContainers initContainersItem) {
    if (this.initContainers == null) {
      this.initContainers = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecContainers>();
    }
    this.initContainers.add(initContainersItem);
    return this;
  }

   /**
   * InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ InitContainers described here modify an operator generated init containers if they share the same name and modifications are done via a strategic merge patch. The current init container name is: &#x60;init-config-reloader&#x60;. Overriding init containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
   * @return initContainers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ InitContainers described here modify an operator generated init containers if they share the same name and modifications are done via a strategic merge patch. The current init container name is: `init-config-reloader`. Overriding init containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecContainers> getInitContainers() {
    return initContainers;
  }


  public void setInitContainers(List<ComCoreosMonitoringV1ThanosRulerSpecContainers> initContainers) {
    this.initContainers = initContainers;
  }


  public ComCoreosMonitoringV1PrometheusSpec listenLocal(Boolean listenLocal) {
    
    this.listenLocal = listenLocal;
    return this;
  }

   /**
   * ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.
   * @return listenLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.")

  public Boolean getListenLocal() {
    return listenLocal;
  }


  public void setListenLocal(Boolean listenLocal) {
    this.listenLocal = listenLocal;
  }


  public ComCoreosMonitoringV1PrometheusSpec logFormat(LogFormatEnum logFormat) {
    
    this.logFormat = logFormat;
    return this;
  }

   /**
   * Log format for Prometheus to be configured with.
   * @return logFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log format for Prometheus to be configured with.")

  public LogFormatEnum getLogFormat() {
    return logFormat;
  }


  public void setLogFormat(LogFormatEnum logFormat) {
    this.logFormat = logFormat;
  }


  public ComCoreosMonitoringV1PrometheusSpec logLevel(LogLevelEnum logLevel) {
    
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Log level for Prometheus to be configured with.
   * @return logLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log level for Prometheus to be configured with.")

  public LogLevelEnum getLogLevel() {
    return logLevel;
  }


  public void setLogLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
  }


  public ComCoreosMonitoringV1PrometheusSpec minReadySeconds(Integer minReadySeconds) {
    
    this.minReadySeconds = minReadySeconds;
    return this;
  }

   /**
   * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.
   * @return minReadySeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.")

  public Integer getMinReadySeconds() {
    return minReadySeconds;
  }


  public void setMinReadySeconds(Integer minReadySeconds) {
    this.minReadySeconds = minReadySeconds;
  }


  public ComCoreosMonitoringV1PrometheusSpec nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * Define which Nodes the Pods are scheduled on.
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define which Nodes the Pods are scheduled on.")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec overrideHonorLabels(Boolean overrideHonorLabels) {
    
    this.overrideHonorLabels = overrideHonorLabels;
    return this;
  }

   /**
   * When true, Prometheus resolves label conflicts by renaming the labels in the scraped data to \&quot;exported_&lt;label value&gt;\&quot; for all targets created from service and pod monitors. Otherwise the HonorLabels field of the service or pod monitor applies.
   * @return overrideHonorLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When true, Prometheus resolves label conflicts by renaming the labels in the scraped data to \"exported_<label value>\" for all targets created from service and pod monitors. Otherwise the HonorLabels field of the service or pod monitor applies.")

  public Boolean getOverrideHonorLabels() {
    return overrideHonorLabels;
  }


  public void setOverrideHonorLabels(Boolean overrideHonorLabels) {
    this.overrideHonorLabels = overrideHonorLabels;
  }


  public ComCoreosMonitoringV1PrometheusSpec overrideHonorTimestamps(Boolean overrideHonorTimestamps) {
    
    this.overrideHonorTimestamps = overrideHonorTimestamps;
    return this;
  }

   /**
   * When true, Prometheus ignores the timestamps for all the targets created from service and pod monitors. Otherwise the HonorTimestamps field of the service or pod monitor applies.
   * @return overrideHonorTimestamps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When true, Prometheus ignores the timestamps for all the targets created from service and pod monitors. Otherwise the HonorTimestamps field of the service or pod monitor applies.")

  public Boolean getOverrideHonorTimestamps() {
    return overrideHonorTimestamps;
  }


  public void setOverrideHonorTimestamps(Boolean overrideHonorTimestamps) {
    this.overrideHonorTimestamps = overrideHonorTimestamps;
  }


  public ComCoreosMonitoringV1PrometheusSpec paused(Boolean paused) {
    
    this.paused = paused;
    return this;
  }

   /**
   * When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.
   * @return paused
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.")

  public Boolean getPaused() {
    return paused;
  }


  public void setPaused(Boolean paused) {
    this.paused = paused;
  }


  public ComCoreosMonitoringV1PrometheusSpec podMetadata(ComCoreosMonitoringV1PrometheusSpecPodMetadata podMetadata) {
    
    this.podMetadata = podMetadata;
    return this;
  }

   /**
   * Get podMetadata
   * @return podMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecPodMetadata getPodMetadata() {
    return podMetadata;
  }


  public void setPodMetadata(ComCoreosMonitoringV1PrometheusSpecPodMetadata podMetadata) {
    this.podMetadata = podMetadata;
  }


  public ComCoreosMonitoringV1PrometheusSpec podMonitorNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecPodMonitorNamespaceSelector podMonitorNamespaceSelector) {
    
    this.podMonitorNamespaceSelector = podMonitorNamespaceSelector;
    return this;
  }

   /**
   * Get podMonitorNamespaceSelector
   * @return podMonitorNamespaceSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecPodMonitorNamespaceSelector getPodMonitorNamespaceSelector() {
    return podMonitorNamespaceSelector;
  }


  public void setPodMonitorNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecPodMonitorNamespaceSelector podMonitorNamespaceSelector) {
    this.podMonitorNamespaceSelector = podMonitorNamespaceSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec podMonitorSelector(ComCoreosMonitoringV1PrometheusSpecPodMonitorSelector podMonitorSelector) {
    
    this.podMonitorSelector = podMonitorSelector;
    return this;
  }

   /**
   * Get podMonitorSelector
   * @return podMonitorSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecPodMonitorSelector getPodMonitorSelector() {
    return podMonitorSelector;
  }


  public void setPodMonitorSelector(ComCoreosMonitoringV1PrometheusSpecPodMonitorSelector podMonitorSelector) {
    this.podMonitorSelector = podMonitorSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec portName(String portName) {
    
    this.portName = portName;
    return this;
  }

   /**
   * Port name used for the pods and governing service. This defaults to web
   * @return portName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Port name used for the pods and governing service. This defaults to web")

  public String getPortName() {
    return portName;
  }


  public void setPortName(String portName) {
    this.portName = portName;
  }


  public ComCoreosMonitoringV1PrometheusSpec priorityClassName(String priorityClassName) {
    
    this.priorityClassName = priorityClassName;
    return this;
  }

   /**
   * Priority class assigned to the Pods
   * @return priorityClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Priority class assigned to the Pods")

  public String getPriorityClassName() {
    return priorityClassName;
  }


  public void setPriorityClassName(String priorityClassName) {
    this.priorityClassName = priorityClassName;
  }


  public ComCoreosMonitoringV1PrometheusSpec probeNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecProbeNamespaceSelector probeNamespaceSelector) {
    
    this.probeNamespaceSelector = probeNamespaceSelector;
    return this;
  }

   /**
   * Get probeNamespaceSelector
   * @return probeNamespaceSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecProbeNamespaceSelector getProbeNamespaceSelector() {
    return probeNamespaceSelector;
  }


  public void setProbeNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecProbeNamespaceSelector probeNamespaceSelector) {
    this.probeNamespaceSelector = probeNamespaceSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec probeSelector(ComCoreosMonitoringV1PrometheusSpecProbeSelector probeSelector) {
    
    this.probeSelector = probeSelector;
    return this;
  }

   /**
   * Get probeSelector
   * @return probeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecProbeSelector getProbeSelector() {
    return probeSelector;
  }


  public void setProbeSelector(ComCoreosMonitoringV1PrometheusSpecProbeSelector probeSelector) {
    this.probeSelector = probeSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec prometheusExternalLabelName(String prometheusExternalLabelName) {
    
    this.prometheusExternalLabelName = prometheusExternalLabelName;
    return this;
  }

   /**
   * Name of Prometheus external label used to denote Prometheus instance name. Defaults to the value of &#x60;prometheus&#x60;. External label will _not_ be added when value is set to empty string (&#x60;\&quot;\&quot;&#x60;).
   * @return prometheusExternalLabelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of Prometheus external label used to denote Prometheus instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`\"\"`).")

  public String getPrometheusExternalLabelName() {
    return prometheusExternalLabelName;
  }


  public void setPrometheusExternalLabelName(String prometheusExternalLabelName) {
    this.prometheusExternalLabelName = prometheusExternalLabelName;
  }


  public ComCoreosMonitoringV1PrometheusSpec prometheusRulesExcludedFromEnforce(List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> prometheusRulesExcludedFromEnforce) {
    
    this.prometheusRulesExcludedFromEnforce = prometheusRulesExcludedFromEnforce;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addPrometheusRulesExcludedFromEnforceItem(ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce prometheusRulesExcludedFromEnforceItem) {
    if (this.prometheusRulesExcludedFromEnforce == null) {
      this.prometheusRulesExcludedFromEnforce = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce>();
    }
    this.prometheusRulesExcludedFromEnforce.add(prometheusRulesExcludedFromEnforceItem);
    return this;
  }

   /**
   * PrometheusRulesExcludedFromEnforce - list of prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair. Deprecated: use excludedFromEnforcement instead.
   * @return prometheusRulesExcludedFromEnforce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PrometheusRulesExcludedFromEnforce - list of prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair. Deprecated: use excludedFromEnforcement instead.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> getPrometheusRulesExcludedFromEnforce() {
    return prometheusRulesExcludedFromEnforce;
  }


  public void setPrometheusRulesExcludedFromEnforce(List<ComCoreosMonitoringV1ThanosRulerSpecPrometheusRulesExcludedFromEnforce> prometheusRulesExcludedFromEnforce) {
    this.prometheusRulesExcludedFromEnforce = prometheusRulesExcludedFromEnforce;
  }


  public ComCoreosMonitoringV1PrometheusSpec query(ComCoreosMonitoringV1PrometheusSpecQuery query) {
    
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecQuery getQuery() {
    return query;
  }


  public void setQuery(ComCoreosMonitoringV1PrometheusSpecQuery query) {
    this.query = query;
  }


  public ComCoreosMonitoringV1PrometheusSpec queryLogFile(String queryLogFile) {
    
    this.queryLogFile = queryLogFile;
    return this;
  }

   /**
   * QueryLogFile specifies the file to which PromQL queries are logged. If the filename has an empty path, e.g. &#39;query.log&#39;, prometheus-operator will mount the file into an emptyDir volume at &#x60;/var/log/prometheus&#x60;. If a full path is provided, e.g. /var/log/prometheus/query.log, you must mount a volume in the specified directory and it must be writable. This is because the prometheus container runs with a read-only root filesystem for security reasons. Alternatively, the location can be set to a stdout location such as &#x60;/dev/stdout&#x60; to log query information to the default Prometheus log stream. This is only available in versions of Prometheus &gt;&#x3D; 2.16.0. For more details, see the Prometheus docs (https://prometheus.io/docs/guides/query-log/)
   * @return queryLogFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QueryLogFile specifies the file to which PromQL queries are logged. If the filename has an empty path, e.g. 'query.log', prometheus-operator will mount the file into an emptyDir volume at `/var/log/prometheus`. If a full path is provided, e.g. /var/log/prometheus/query.log, you must mount a volume in the specified directory and it must be writable. This is because the prometheus container runs with a read-only root filesystem for security reasons. Alternatively, the location can be set to a stdout location such as `/dev/stdout` to log query information to the default Prometheus log stream. This is only available in versions of Prometheus >= 2.16.0. For more details, see the Prometheus docs (https://prometheus.io/docs/guides/query-log/)")

  public String getQueryLogFile() {
    return queryLogFile;
  }


  public void setQueryLogFile(String queryLogFile) {
    this.queryLogFile = queryLogFile;
  }


  public ComCoreosMonitoringV1PrometheusSpec remoteRead(List<ComCoreosMonitoringV1PrometheusSpecRemoteRead> remoteRead) {
    
    this.remoteRead = remoteRead;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addRemoteReadItem(ComCoreosMonitoringV1PrometheusSpecRemoteRead remoteReadItem) {
    if (this.remoteRead == null) {
      this.remoteRead = new ArrayList<ComCoreosMonitoringV1PrometheusSpecRemoteRead>();
    }
    this.remoteRead.add(remoteReadItem);
    return this;
  }

   /**
   * remoteRead is the list of remote read configurations.
   * @return remoteRead
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "remoteRead is the list of remote read configurations.")

  public List<ComCoreosMonitoringV1PrometheusSpecRemoteRead> getRemoteRead() {
    return remoteRead;
  }


  public void setRemoteRead(List<ComCoreosMonitoringV1PrometheusSpecRemoteRead> remoteRead) {
    this.remoteRead = remoteRead;
  }


  public ComCoreosMonitoringV1PrometheusSpec remoteWrite(List<ComCoreosMonitoringV1PrometheusSpecRemoteWrite> remoteWrite) {
    
    this.remoteWrite = remoteWrite;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addRemoteWriteItem(ComCoreosMonitoringV1PrometheusSpecRemoteWrite remoteWriteItem) {
    if (this.remoteWrite == null) {
      this.remoteWrite = new ArrayList<ComCoreosMonitoringV1PrometheusSpecRemoteWrite>();
    }
    this.remoteWrite.add(remoteWriteItem);
    return this;
  }

   /**
   * remoteWrite is the list of remote write configurations.
   * @return remoteWrite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "remoteWrite is the list of remote write configurations.")

  public List<ComCoreosMonitoringV1PrometheusSpecRemoteWrite> getRemoteWrite() {
    return remoteWrite;
  }


  public void setRemoteWrite(List<ComCoreosMonitoringV1PrometheusSpecRemoteWrite> remoteWrite) {
    this.remoteWrite = remoteWrite;
  }


  public ComCoreosMonitoringV1PrometheusSpec replicaExternalLabelName(String replicaExternalLabelName) {
    
    this.replicaExternalLabelName = replicaExternalLabelName;
    return this;
  }

   /**
   * Name of Prometheus external label used to denote replica name. Defaults to the value of &#x60;prometheus_replica&#x60;. External label will _not_ be added when value is set to empty string (&#x60;\&quot;\&quot;&#x60;).
   * @return replicaExternalLabelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of Prometheus external label used to denote replica name. Defaults to the value of `prometheus_replica`. External label will _not_ be added when value is set to empty string (`\"\"`).")

  public String getReplicaExternalLabelName() {
    return replicaExternalLabelName;
  }


  public void setReplicaExternalLabelName(String replicaExternalLabelName) {
    this.replicaExternalLabelName = replicaExternalLabelName;
  }


  public ComCoreosMonitoringV1PrometheusSpec replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Number of replicas of each shard to deploy for a Prometheus deployment. Number of replicas multiplied by shards is the total number of Pods created.
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of replicas of each shard to deploy for a Prometheus deployment. Number of replicas multiplied by shards is the total number of Pods created.")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public ComCoreosMonitoringV1PrometheusSpec resources(ComCoreosMonitoringV1PrometheusSpecResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecResources getResources() {
    return resources;
  }


  public void setResources(ComCoreosMonitoringV1PrometheusSpecResources resources) {
    this.resources = resources;
  }


  public ComCoreosMonitoringV1PrometheusSpec retention(String retention) {
    
    this.retention = retention;
    return this;
  }

   /**
   * Time duration Prometheus shall retain data for. Default is &#39;24h&#39; if retentionSize is not set, and must match the regular expression &#x60;[0-9]+(ms|s|m|h|d|w|y)&#x60; (milliseconds seconds minutes hours days weeks years).
   * @return retention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time duration Prometheus shall retain data for. Default is '24h' if retentionSize is not set, and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).")

  public String getRetention() {
    return retention;
  }


  public void setRetention(String retention) {
    this.retention = retention;
  }


  public ComCoreosMonitoringV1PrometheusSpec retentionSize(String retentionSize) {
    
    this.retentionSize = retentionSize;
    return this;
  }

   /**
   * Maximum amount of disk space used by blocks.
   * @return retentionSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum amount of disk space used by blocks.")

  public String getRetentionSize() {
    return retentionSize;
  }


  public void setRetentionSize(String retentionSize) {
    this.retentionSize = retentionSize;
  }


  public ComCoreosMonitoringV1PrometheusSpec routePrefix(String routePrefix) {
    
    this.routePrefix = routePrefix;
    return this;
  }

   /**
   * The route prefix Prometheus registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with &#x60;kubectl proxy&#x60;.
   * @return routePrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The route prefix Prometheus registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.")

  public String getRoutePrefix() {
    return routePrefix;
  }


  public void setRoutePrefix(String routePrefix) {
    this.routePrefix = routePrefix;
  }


  public ComCoreosMonitoringV1PrometheusSpec ruleNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecRuleNamespaceSelector ruleNamespaceSelector) {
    
    this.ruleNamespaceSelector = ruleNamespaceSelector;
    return this;
  }

   /**
   * Get ruleNamespaceSelector
   * @return ruleNamespaceSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecRuleNamespaceSelector getRuleNamespaceSelector() {
    return ruleNamespaceSelector;
  }


  public void setRuleNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecRuleNamespaceSelector ruleNamespaceSelector) {
    this.ruleNamespaceSelector = ruleNamespaceSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec ruleSelector(ComCoreosMonitoringV1PrometheusSpecRuleSelector ruleSelector) {
    
    this.ruleSelector = ruleSelector;
    return this;
  }

   /**
   * Get ruleSelector
   * @return ruleSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecRuleSelector getRuleSelector() {
    return ruleSelector;
  }


  public void setRuleSelector(ComCoreosMonitoringV1PrometheusSpecRuleSelector ruleSelector) {
    this.ruleSelector = ruleSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec rules(ComCoreosMonitoringV1PrometheusSpecRules rules) {
    
    this.rules = rules;
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecRules getRules() {
    return rules;
  }


  public void setRules(ComCoreosMonitoringV1PrometheusSpecRules rules) {
    this.rules = rules;
  }


  public ComCoreosMonitoringV1PrometheusSpec scrapeInterval(String scrapeInterval) {
    
    this.scrapeInterval = scrapeInterval;
    return this;
  }

   /**
   * Interval between consecutive scrapes. Default: &#x60;1m&#x60;
   * @return scrapeInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interval between consecutive scrapes. Default: `1m`")

  public String getScrapeInterval() {
    return scrapeInterval;
  }


  public void setScrapeInterval(String scrapeInterval) {
    this.scrapeInterval = scrapeInterval;
  }


  public ComCoreosMonitoringV1PrometheusSpec scrapeTimeout(String scrapeTimeout) {
    
    this.scrapeTimeout = scrapeTimeout;
    return this;
  }

   /**
   * Number of seconds to wait for target to respond before erroring.
   * @return scrapeTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of seconds to wait for target to respond before erroring.")

  public String getScrapeTimeout() {
    return scrapeTimeout;
  }


  public void setScrapeTimeout(String scrapeTimeout) {
    this.scrapeTimeout = scrapeTimeout;
  }


  public ComCoreosMonitoringV1PrometheusSpec secrets(List<String> secrets) {
    
    this.secrets = secrets;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addSecretsItem(String secretsItem) {
    if (this.secrets == null) {
      this.secrets = new ArrayList<String>();
    }
    this.secrets.add(secretsItem);
    return this;
  }

   /**
   * Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The Secrets are mounted into /etc/prometheus/secrets/&lt;secret-name&gt;.
   * @return secrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.")

  public List<String> getSecrets() {
    return secrets;
  }


  public void setSecrets(List<String> secrets) {
    this.secrets = secrets;
  }


  public ComCoreosMonitoringV1PrometheusSpec securityContext(ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext) {
    
    this.securityContext = securityContext;
    return this;
  }

   /**
   * Get securityContext
   * @return securityContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 getSecurityContext() {
    return securityContext;
  }


  public void setSecurityContext(ComCoreosMonitoringV1ThanosRulerSpecSecurityContext1 securityContext) {
    this.securityContext = securityContext;
  }


  public ComCoreosMonitoringV1PrometheusSpec serviceAccountName(String serviceAccountName) {
    
    this.serviceAccountName = serviceAccountName;
    return this;
  }

   /**
   * ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
   * @return serviceAccountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.")

  public String getServiceAccountName() {
    return serviceAccountName;
  }


  public void setServiceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }


  public ComCoreosMonitoringV1PrometheusSpec serviceMonitorNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecServiceMonitorNamespaceSelector serviceMonitorNamespaceSelector) {
    
    this.serviceMonitorNamespaceSelector = serviceMonitorNamespaceSelector;
    return this;
  }

   /**
   * Get serviceMonitorNamespaceSelector
   * @return serviceMonitorNamespaceSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecServiceMonitorNamespaceSelector getServiceMonitorNamespaceSelector() {
    return serviceMonitorNamespaceSelector;
  }


  public void setServiceMonitorNamespaceSelector(ComCoreosMonitoringV1PrometheusSpecServiceMonitorNamespaceSelector serviceMonitorNamespaceSelector) {
    this.serviceMonitorNamespaceSelector = serviceMonitorNamespaceSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec serviceMonitorSelector(ComCoreosMonitoringV1PrometheusSpecServiceMonitorSelector serviceMonitorSelector) {
    
    this.serviceMonitorSelector = serviceMonitorSelector;
    return this;
  }

   /**
   * Get serviceMonitorSelector
   * @return serviceMonitorSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecServiceMonitorSelector getServiceMonitorSelector() {
    return serviceMonitorSelector;
  }


  public void setServiceMonitorSelector(ComCoreosMonitoringV1PrometheusSpecServiceMonitorSelector serviceMonitorSelector) {
    this.serviceMonitorSelector = serviceMonitorSelector;
  }


  public ComCoreosMonitoringV1PrometheusSpec sha(String sha) {
    
    this.sha = sha;
    return this;
  }

   /**
   * SHA of Prometheus container image to be deployed. Defaults to the value of &#x60;version&#x60;. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use &#39;image&#39; instead.  The image digest can be specified as part of the image URL.
   * @return sha
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SHA of Prometheus container image to be deployed. Defaults to the value of `version`. Similar to a tag, but the SHA explicitly deploys an immutable container image. Version and Tag are ignored if SHA is set. Deprecated: use 'image' instead.  The image digest can be specified as part of the image URL.")

  public String getSha() {
    return sha;
  }


  public void setSha(String sha) {
    this.sha = sha;
  }


  public ComCoreosMonitoringV1PrometheusSpec shards(Integer shards) {
    
    this.shards = shards;
    return this;
  }

   /**
   * EXPERIMENTAL: Number of shards to distribute targets onto. Number of replicas multiplied by shards is the total number of Pods created. Note that scaling down shards will not reshard data onto remaining instances, it must be manually moved. Increasing shards will not reshard data either but it will continue to be available from the same instances. To query globally use Thanos sidecar and Thanos querier or remote write data to a central location. Sharding is done on the content of the &#x60;__address__&#x60; target meta-label.
   * @return shards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EXPERIMENTAL: Number of shards to distribute targets onto. Number of replicas multiplied by shards is the total number of Pods created. Note that scaling down shards will not reshard data onto remaining instances, it must be manually moved. Increasing shards will not reshard data either but it will continue to be available from the same instances. To query globally use Thanos sidecar and Thanos querier or remote write data to a central location. Sharding is done on the content of the `__address__` target meta-label.")

  public Integer getShards() {
    return shards;
  }


  public void setShards(Integer shards) {
    this.shards = shards;
  }


  public ComCoreosMonitoringV1PrometheusSpec storage(ComCoreosMonitoringV1ThanosRulerSpecStorage storage) {
    
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecStorage getStorage() {
    return storage;
  }


  public void setStorage(ComCoreosMonitoringV1ThanosRulerSpecStorage storage) {
    this.storage = storage;
  }


  public ComCoreosMonitoringV1PrometheusSpec tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Tag of Prometheus container image to be deployed. Defaults to the value of &#x60;version&#x60;. Version is ignored if Tag is set. Deprecated: use &#39;image&#39; instead.  The image tag can be specified as part of the image URL.
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tag of Prometheus container image to be deployed. Defaults to the value of `version`. Version is ignored if Tag is set. Deprecated: use 'image' instead.  The image tag can be specified as part of the image URL.")

  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }


  public ComCoreosMonitoringV1PrometheusSpec thanos(ComCoreosMonitoringV1PrometheusSpecThanos thanos) {
    
    this.thanos = thanos;
    return this;
  }

   /**
   * Get thanos
   * @return thanos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecThanos getThanos() {
    return thanos;
  }


  public void setThanos(ComCoreosMonitoringV1PrometheusSpecThanos thanos) {
    this.thanos = thanos;
  }


  public ComCoreosMonitoringV1PrometheusSpec tolerations(List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addTolerationsItem(ComCoreosMonitoringV1ThanosRulerSpecTolerations tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecTolerations>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * If specified, the pod&#39;s tolerations.
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the pod's tolerations.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<ComCoreosMonitoringV1ThanosRulerSpecTolerations> tolerations) {
    this.tolerations = tolerations;
  }


  public ComCoreosMonitoringV1PrometheusSpec topologySpreadConstraints(List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints) {
    
    this.topologySpreadConstraints = topologySpreadConstraints;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addTopologySpreadConstraintsItem(ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints topologySpreadConstraintsItem) {
    if (this.topologySpreadConstraints == null) {
      this.topologySpreadConstraints = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints>();
    }
    this.topologySpreadConstraints.add(topologySpreadConstraintsItem);
    return this;
  }

   /**
   * If specified, the pod&#39;s topology spread constraints.
   * @return topologySpreadConstraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If specified, the pod's topology spread constraints.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> getTopologySpreadConstraints() {
    return topologySpreadConstraints;
  }


  public void setTopologySpreadConstraints(List<ComCoreosMonitoringV1ThanosRulerSpecTopologySpreadConstraints> topologySpreadConstraints) {
    this.topologySpreadConstraints = topologySpreadConstraints;
  }


  public ComCoreosMonitoringV1PrometheusSpec version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version of Prometheus to be deployed.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version of Prometheus to be deployed.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public ComCoreosMonitoringV1PrometheusSpec volumeMounts(List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> volumeMounts) {
    
    this.volumeMounts = volumeMounts;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addVolumeMountsItem(ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

   /**
   * VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the prometheus container, that are generated as a result of StorageSpec objects.
   * @return volumeMounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the prometheus container, that are generated as a result of StorageSpec objects.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> getVolumeMounts() {
    return volumeMounts;
  }


  public void setVolumeMounts(List<ComCoreosMonitoringV1ThanosRulerSpecVolumeMounts> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }


  public ComCoreosMonitoringV1PrometheusSpec volumes(List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public ComCoreosMonitoringV1PrometheusSpec addVolumesItem(ComCoreosMonitoringV1ThanosRulerSpecVolumes volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecVolumes>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<ComCoreosMonitoringV1ThanosRulerSpecVolumes> volumes) {
    this.volumes = volumes;
  }


  public ComCoreosMonitoringV1PrometheusSpec walCompression(Boolean walCompression) {
    
    this.walCompression = walCompression;
    return this;
  }

   /**
   * Enable compression of the write-ahead log using Snappy. This flag is only available in versions of Prometheus &gt;&#x3D; 2.11.0.
   * @return walCompression
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable compression of the write-ahead log using Snappy. This flag is only available in versions of Prometheus >= 2.11.0.")

  public Boolean getWalCompression() {
    return walCompression;
  }


  public void setWalCompression(Boolean walCompression) {
    this.walCompression = walCompression;
  }


  public ComCoreosMonitoringV1PrometheusSpec web(ComCoreosMonitoringV1PrometheusSpecWeb web) {
    
    this.web = web;
    return this;
  }

   /**
   * Get web
   * @return web
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1PrometheusSpecWeb getWeb() {
    return web;
  }


  public void setWeb(ComCoreosMonitoringV1PrometheusSpecWeb web) {
    this.web = web;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1PrometheusSpec {\n");
    sb.append("    additionalAlertManagerConfigs: ").append(toIndentedString(additionalAlertManagerConfigs)).append("\n");
    sb.append("    additionalAlertRelabelConfigs: ").append(toIndentedString(additionalAlertRelabelConfigs)).append("\n");
    sb.append("    additionalScrapeConfigs: ").append(toIndentedString(additionalScrapeConfigs)).append("\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    alerting: ").append(toIndentedString(alerting)).append("\n");
    sb.append("    allowOverlappingBlocks: ").append(toIndentedString(allowOverlappingBlocks)).append("\n");
    sb.append("    apiserverConfig: ").append(toIndentedString(apiserverConfig)).append("\n");
    sb.append("    arbitraryFSAccessThroughSMs: ").append(toIndentedString(arbitraryFSAccessThroughSMs)).append("\n");
    sb.append("    baseImage: ").append(toIndentedString(baseImage)).append("\n");
    sb.append("    configMaps: ").append(toIndentedString(configMaps)).append("\n");
    sb.append("    containers: ").append(toIndentedString(containers)).append("\n");
    sb.append("    disableCompaction: ").append(toIndentedString(disableCompaction)).append("\n");
    sb.append("    enableAdminAPI: ").append(toIndentedString(enableAdminAPI)).append("\n");
    sb.append("    enableFeatures: ").append(toIndentedString(enableFeatures)).append("\n");
    sb.append("    enableRemoteWriteReceiver: ").append(toIndentedString(enableRemoteWriteReceiver)).append("\n");
    sb.append("    enforcedBodySizeLimit: ").append(toIndentedString(enforcedBodySizeLimit)).append("\n");
    sb.append("    enforcedLabelLimit: ").append(toIndentedString(enforcedLabelLimit)).append("\n");
    sb.append("    enforcedLabelNameLengthLimit: ").append(toIndentedString(enforcedLabelNameLengthLimit)).append("\n");
    sb.append("    enforcedLabelValueLengthLimit: ").append(toIndentedString(enforcedLabelValueLengthLimit)).append("\n");
    sb.append("    enforcedNamespaceLabel: ").append(toIndentedString(enforcedNamespaceLabel)).append("\n");
    sb.append("    enforcedSampleLimit: ").append(toIndentedString(enforcedSampleLimit)).append("\n");
    sb.append("    enforcedTargetLimit: ").append(toIndentedString(enforcedTargetLimit)).append("\n");
    sb.append("    evaluationInterval: ").append(toIndentedString(evaluationInterval)).append("\n");
    sb.append("    excludedFromEnforcement: ").append(toIndentedString(excludedFromEnforcement)).append("\n");
    sb.append("    externalLabels: ").append(toIndentedString(externalLabels)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    ignoreNamespaceSelectors: ").append(toIndentedString(ignoreNamespaceSelectors)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    initContainers: ").append(toIndentedString(initContainers)).append("\n");
    sb.append("    listenLocal: ").append(toIndentedString(listenLocal)).append("\n");
    sb.append("    logFormat: ").append(toIndentedString(logFormat)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    minReadySeconds: ").append(toIndentedString(minReadySeconds)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    overrideHonorLabels: ").append(toIndentedString(overrideHonorLabels)).append("\n");
    sb.append("    overrideHonorTimestamps: ").append(toIndentedString(overrideHonorTimestamps)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    podMetadata: ").append(toIndentedString(podMetadata)).append("\n");
    sb.append("    podMonitorNamespaceSelector: ").append(toIndentedString(podMonitorNamespaceSelector)).append("\n");
    sb.append("    podMonitorSelector: ").append(toIndentedString(podMonitorSelector)).append("\n");
    sb.append("    portName: ").append(toIndentedString(portName)).append("\n");
    sb.append("    priorityClassName: ").append(toIndentedString(priorityClassName)).append("\n");
    sb.append("    probeNamespaceSelector: ").append(toIndentedString(probeNamespaceSelector)).append("\n");
    sb.append("    probeSelector: ").append(toIndentedString(probeSelector)).append("\n");
    sb.append("    prometheusExternalLabelName: ").append(toIndentedString(prometheusExternalLabelName)).append("\n");
    sb.append("    prometheusRulesExcludedFromEnforce: ").append(toIndentedString(prometheusRulesExcludedFromEnforce)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    queryLogFile: ").append(toIndentedString(queryLogFile)).append("\n");
    sb.append("    remoteRead: ").append(toIndentedString(remoteRead)).append("\n");
    sb.append("    remoteWrite: ").append(toIndentedString(remoteWrite)).append("\n");
    sb.append("    replicaExternalLabelName: ").append(toIndentedString(replicaExternalLabelName)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    retentionSize: ").append(toIndentedString(retentionSize)).append("\n");
    sb.append("    routePrefix: ").append(toIndentedString(routePrefix)).append("\n");
    sb.append("    ruleNamespaceSelector: ").append(toIndentedString(ruleNamespaceSelector)).append("\n");
    sb.append("    ruleSelector: ").append(toIndentedString(ruleSelector)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    scrapeInterval: ").append(toIndentedString(scrapeInterval)).append("\n");
    sb.append("    scrapeTimeout: ").append(toIndentedString(scrapeTimeout)).append("\n");
    sb.append("    secrets: ").append(toIndentedString(secrets)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("    serviceMonitorNamespaceSelector: ").append(toIndentedString(serviceMonitorNamespaceSelector)).append("\n");
    sb.append("    serviceMonitorSelector: ").append(toIndentedString(serviceMonitorSelector)).append("\n");
    sb.append("    sha: ").append(toIndentedString(sha)).append("\n");
    sb.append("    shards: ").append(toIndentedString(shards)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    thanos: ").append(toIndentedString(thanos)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    topologySpreadConstraints: ").append(toIndentedString(topologySpreadConstraints)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    walCompression: ").append(toIndentedString(walCompression)).append("\n");
    sb.append("    web: ").append(toIndentedString(web)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

