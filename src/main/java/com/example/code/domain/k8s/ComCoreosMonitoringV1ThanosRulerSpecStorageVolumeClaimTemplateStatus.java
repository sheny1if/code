/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
 */
@ApiModel(description = "Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus {
  public static final String SERIALIZED_NAME_ACCESS_MODES = "accessModes";
  @SerializedName(SERIALIZED_NAME_ACCESS_MODES)
  private List<String> accessModes = null;

  public static final String SERIALIZED_NAME_ALLOCATED_RESOURCES = "allocatedResources";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_RESOURCES)
  private Map<String, Object> allocatedResources = null;

  public static final String SERIALIZED_NAME_CAPACITY = "capacity";
  @SerializedName(SERIALIZED_NAME_CAPACITY)
  private Map<String, Object> capacity = null;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions> conditions = null;

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private String phase;

  public static final String SERIALIZED_NAME_RESIZE_STATUS = "resizeStatus";
  @SerializedName(SERIALIZED_NAME_RESIZE_STATUS)
  private String resizeStatus;


  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus accessModes(List<String> accessModes) {
    
    this.accessModes = accessModes;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus addAccessModesItem(String accessModesItem) {
    if (this.accessModes == null) {
      this.accessModes = new ArrayList<String>();
    }
    this.accessModes.add(accessModesItem);
    return this;
  }

   /**
   * AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   * @return accessModes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1")

  public List<String> getAccessModes() {
    return accessModes;
  }


  public void setAccessModes(List<String> accessModes) {
    this.accessModes = accessModes;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus allocatedResources(Map<String, Object> allocatedResources) {
    
    this.allocatedResources = allocatedResources;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus putAllocatedResourcesItem(String key, Object allocatedResourcesItem) {
    if (this.allocatedResources == null) {
      this.allocatedResources = new HashMap<String, Object>();
    }
    this.allocatedResources.put(key, allocatedResourcesItem);
    return this;
  }

   /**
   * The storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
   * @return allocatedResources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.")

  public Map<String, Object> getAllocatedResources() {
    return allocatedResources;
  }


  public void setAllocatedResources(Map<String, Object> allocatedResources) {
    this.allocatedResources = allocatedResources;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus capacity(Map<String, Object> capacity) {
    
    this.capacity = capacity;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus putCapacityItem(String key, Object capacityItem) {
    if (this.capacity == null) {
      this.capacity = new HashMap<String, Object>();
    }
    this.capacity.put(key, capacityItem);
    return this;
  }

   /**
   * Represents the actual resources of the underlying volume.
   * @return capacity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents the actual resources of the underlying volume.")

  public Map<String, Object> getCapacity() {
    return capacity;
  }


  public void setCapacity(Map<String, Object> capacity) {
    this.capacity = capacity;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus conditions(List<ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus addConditionsItem(ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to &#39;ResizeStarted&#39;.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.")

  public List<ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions> getConditions() {
    return conditions;
  }


  public void setConditions(List<ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatusConditions> conditions) {
    this.conditions = conditions;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus phase(String phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Phase represents the current phase of PersistentVolumeClaim.
   * @return phase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phase represents the current phase of PersistentVolumeClaim.")

  public String getPhase() {
    return phase;
  }


  public void setPhase(String phase) {
    this.phase = phase;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus resizeStatus(String resizeStatus) {
    
    this.resizeStatus = resizeStatus;
    return this;
  }

   /**
   * ResizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
   * @return resizeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ResizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.")

  public String getResizeStatus() {
    return resizeStatus;
  }


  public void setResizeStatus(String resizeStatus) {
    this.resizeStatus = resizeStatus;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1ThanosRulerSpecStorageVolumeClaimTemplateStatus {\n");
    sb.append("    accessModes: ").append(toIndentedString(accessModes)).append("\n");
    sb.append("    allocatedResources: ").append(toIndentedString(allocatedResources)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    resizeStatus: ").append(toIndentedString(resizeStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

