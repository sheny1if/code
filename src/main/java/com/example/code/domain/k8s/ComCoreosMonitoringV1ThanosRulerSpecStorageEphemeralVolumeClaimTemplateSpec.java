/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.20.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.code.domain.k8s;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSource;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecResources;
import com.example.code.domain.k8s.ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecSelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
 */
@ApiModel(description = "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-03T04:59:34.868Z[Etc/UTC]")
public class ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec {
  public static final String SERIALIZED_NAME_ACCESS_MODES = "accessModes";
  @SerializedName(SERIALIZED_NAME_ACCESS_MODES)
  private List<String> accessModes = null;

  public static final String SERIALIZED_NAME_DATA_SOURCE = "dataSource";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE)
  private ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSource dataSource;

  public static final String SERIALIZED_NAME_DATA_SOURCE_REF = "dataSourceRef";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE_REF)
  private ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef dataSourceRef;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecResources resources;

  public static final String SERIALIZED_NAME_SELECTOR = "selector";
  @SerializedName(SERIALIZED_NAME_SELECTOR)
  private ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecSelector selector;

  public static final String SERIALIZED_NAME_STORAGE_CLASS_NAME = "storageClassName";
  @SerializedName(SERIALIZED_NAME_STORAGE_CLASS_NAME)
  private String storageClassName;

  public static final String SERIALIZED_NAME_VOLUME_MODE = "volumeMode";
  @SerializedName(SERIALIZED_NAME_VOLUME_MODE)
  private String volumeMode;

  public static final String SERIALIZED_NAME_VOLUME_NAME = "volumeName";
  @SerializedName(SERIALIZED_NAME_VOLUME_NAME)
  private String volumeName;


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec accessModes(List<String> accessModes) {
    
    this.accessModes = accessModes;
    return this;
  }

  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec addAccessModesItem(String accessModesItem) {
    if (this.accessModes == null) {
      this.accessModes = new ArrayList<String>();
    }
    this.accessModes.add(accessModesItem);
    return this;
  }

   /**
   * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   * @return accessModes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1")

  public List<String> getAccessModes() {
    return accessModes;
  }


  public void setAccessModes(List<String> accessModes) {
    this.accessModes = accessModes;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec dataSource(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSource dataSource) {
    
    this.dataSource = dataSource;
    return this;
  }

   /**
   * Get dataSource
   * @return dataSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSource getDataSource() {
    return dataSource;
  }


  public void setDataSource(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSource dataSource) {
    this.dataSource = dataSource;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec dataSourceRef(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef dataSourceRef) {
    
    this.dataSourceRef = dataSourceRef;
    return this;
  }

   /**
   * Get dataSourceRef
   * @return dataSourceRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef getDataSourceRef() {
    return dataSourceRef;
  }


  public void setDataSourceRef(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef dataSourceRef) {
    this.dataSourceRef = dataSourceRef;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec resources(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecResources getResources() {
    return resources;
  }


  public void setResources(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecResources resources) {
    this.resources = resources;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec selector(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecSelector selector) {
    
    this.selector = selector;
    return this;
  }

   /**
   * Get selector
   * @return selector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecSelector getSelector() {
    return selector;
  }


  public void setSelector(ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpecSelector selector) {
    this.selector = selector;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec storageClassName(String storageClassName) {
    
    this.storageClassName = storageClassName;
    return this;
  }

   /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   * @return storageClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1")

  public String getStorageClassName() {
    return storageClassName;
  }


  public void setStorageClassName(String storageClassName) {
    this.storageClassName = storageClassName;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec volumeMode(String volumeMode) {
    
    this.volumeMode = volumeMode;
    return this;
  }

   /**
   * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
   * @return volumeMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.")

  public String getVolumeMode() {
    return volumeMode;
  }


  public void setVolumeMode(String volumeMode) {
    this.volumeMode = volumeMode;
  }


  public ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec volumeName(String volumeName) {
    
    this.volumeName = volumeName;
    return this;
  }

   /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   * @return volumeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "VolumeName is the binding reference to the PersistentVolume backing this claim.")

  public String getVolumeName() {
    return volumeName;
  }


  public void setVolumeName(String volumeName) {
    this.volumeName = volumeName;
  }


  @Override
  public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
  }

  @Override
  public int hashCode() {
    return HashCodeBuilder.reflectionHashCode(this);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComCoreosMonitoringV1ThanosRulerSpecStorageEphemeralVolumeClaimTemplateSpec {\n");
    sb.append("    accessModes: ").append(toIndentedString(accessModes)).append("\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("    dataSourceRef: ").append(toIndentedString(dataSourceRef)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    storageClassName: ").append(toIndentedString(storageClassName)).append("\n");
    sb.append("    volumeMode: ").append(toIndentedString(volumeMode)).append("\n");
    sb.append("    volumeName: ").append(toIndentedString(volumeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

